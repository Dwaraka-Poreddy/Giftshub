{"version":3,"file":"static/js/4247.368fb402.chunk.js","mappings":"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","sources":["AboutQuiz/LiveQuestionCard.js","NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveAboutQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./AboutQuiz.css\";\r\nimport items from \"./questions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nexport default function AboutQuiz({ quesArray, answersArray, fbimg }) {\r\n  const [showplayAgain, setshowPlayagain] = useState(false);\r\n  const [correct, setcorrect] = useState(0);\r\n  const [quesnumber, setquesnumber] = useState(0);\r\n  const [divheight, setdivheight] = useState(600 / quesArray.length + \"px\");\r\n  const [bgcolrs, setbgcolrs] = useState([\r\n    \"red\",\r\n    \"blue\",\r\n    \"orange\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"purple\",\r\n    \"red\",\r\n    \"blue\",\r\n    \"orange\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"purple\",\r\n    \"red\",\r\n    \"blue\",\r\n    \"orange\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"purple\",\r\n  ]);\r\n  const getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  };\r\n  const handleoptionclick = (index) => {\r\n    if (answersArray[quesnumber] == index) {\r\n      setcorrect(correct + 1);\r\n      var sheeps = bgcolrs;\r\n      var num = getRandomInt(quesArray.length);\r\n      while (sheeps[num] == \"transparent\") {\r\n        num = getRandomInt(quesArray.length);\r\n        console.log(num);\r\n      }\r\n      sheeps[num] = \"transparent\";\r\n      setbgcolrs(sheeps);\r\n    }\r\n    if (quesnumber + 1 == quesArray.length) {\r\n      setshowPlayagain(true);\r\n    }\r\n    if (quesnumber + 1 < quesArray.length) {\r\n      setquesnumber(quesnumber + 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6 mb-3\">\r\n            <div\r\n              style={{\r\n                backgroundImage: \"url(\" + fbimg + \")\",\r\n                transition: \"all 0.5s ease-out\",\r\n                // height: calc(width / 2),\r\n                width: \"100%\",\r\n                // height: \"75vh\",\r\n                // maxHeight: \"600px\",\r\n                maxwidth: \"450px\",\r\n                margin: \"auto\",\r\n                backgroundSize: \"cover\",\r\n              }}\r\n              src={fbimg}\r\n              alt=\"\"\r\n            >\r\n              {quesArray.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      backgroundColor: bgcolrs[index],\r\n                      height: divheight,\r\n                      opacity: \"0.8\",\r\n                      transition: \"all 1s ease-out\",\r\n                    }}\r\n                  ></div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6 mb-3\">\r\n            {!showplayAgain ? (\r\n              <div class=\"container\">\r\n                <div class=\"card p-3\">\r\n                  {quesnumber > 0 ? (\r\n                    <h4 style={{ textAlign: \"center\" }}>\r\n                      {correct} Correct out of {quesnumber}\r\n                    </h4>\r\n                  ) : null}\r\n\r\n                  <h4\r\n                    style={{\r\n                      color: \"#3e6ef3\",\r\n                      fontSize: \"1.5rem\",\r\n                      fontWeight: \"500\",\r\n                      lineHeight: \"1.2\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {console.log(\r\n                      items[quesArray[quesnumber]].question2_live,\r\n                      \"itemsarray\"\r\n                    )}\r\n                    {items[quesArray[quesnumber]].question2_live}\r\n                  </h4>\r\n                  <center>\r\n                    <div\r\n                      className=\"questions row\"\r\n                      style={{ maxWidth: \"400px\" }}\r\n                    >\r\n                      {items[quesArray[quesnumber]].options.map(\r\n                        (item, index) => {\r\n                          return (\r\n                            <div class=\" col-6 mb-2\">\r\n                              <div\r\n                                class=\"card\"\r\n                                onClick={() => {\r\n                                  handleoptionclick(index);\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  style={{ width: \"100%\" }}\r\n                                  src={require(\"./imgquiz/\" +\r\n                                    items[quesArray[quesnumber]].images[index])}\r\n                                  // src={\r\n                                  //   items[quesArray[quesnumber]].images[index]\r\n                                  // }\r\n                                  alt=\"\"\r\n                                />\r\n                                {item}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </div>\r\n                  </center>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h4\r\n                  style={{\r\n                    color: \"#3e6ef3\",\r\n                    fontSize: \"1.5rem\",\r\n                    fontWeight: \"500\",\r\n                    lineHeight: \"1.2\",\r\n                    textAlign: \"center\",\r\n                    lineHeight: \"1.2\",\r\n                  }}\r\n                >\r\n                  Total Score {correct} out of {quesArray.length}\r\n                </h4>\r\n                <center>\r\n                  <button\r\n                    class=\"btn btn-success\"\r\n                    onClick={() => {\r\n                      setshowPlayagain(false);\r\n                      setcorrect(0);\r\n                      setquesnumber(0);\r\n                      setbgcolrs([\r\n                        \"red\",\r\n                        \"blue\",\r\n                        \"orange\",\r\n                        \"green\",\r\n                        \"yellow\",\r\n                        \"purple\",\r\n                        \"red\",\r\n                        \"blue\",\r\n                        \"orange\",\r\n                        \"green\",\r\n                        \"yellow\",\r\n                        \"purple\",\r\n                        \"red\",\r\n                        \"blue\",\r\n                        \"orange\",\r\n                        \"green\",\r\n                        \"yellow\",\r\n                        \"purple\",\r\n                      ]);\r\n                    }}\r\n                  >\r\n                    Play Again\r\n                  </button>\r\n                </center>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction ScheduledLiveNavBar({ slug }) {\r\n  const { daystep } = useSelector((state) => ({ ...state }));\r\n  const database = firebase.firestore();\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\r\n    const data = await snapshot.data().array_data;\r\n\r\n    data.map((item, index) => {\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a\r\n                  class=\"nav-link js-scroll-trigger\"\r\n                  href={`/scheduledlive/main/${slug}`}\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {dataurl.map((item, index) => {\r\n                if (item != \"\") {\r\n                  if (index == daystep.day - 1) {\r\n                    return (\r\n                      <li class=\"nav-item \">\r\n                        <a\r\n                          class=\"nav-link js-scroll-trigger active\"\r\n                          href={item}\r\n                        >\r\n                          Day {index + 1}\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <li class=\"nav-item \">\r\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\r\n                        Day {index + 1}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveNavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 190,\r\n  strokeWidth: 6,\r\n};\r\nconst timerProps1 = {\r\n  isPlaying: true,\r\n  size: 80,\r\n  strokeWidth: 3,\r\n};\r\nconst timerProps2 = {\r\n  isPlaying: true,\r\n  size: 150,\r\n  strokeWidth: 4,\r\n};\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nexport default function CircleTimer({ Bday }) {\r\n  const [loading, setloading] = useState(false);\r\n  const startTime = 0;\r\n\r\n  const endTime = Bday / 1000;\r\n  console.log(endTime, \"endtime\");\r\n\r\n  const remainingTime = endTime - startTime;\r\n  console.log(remainingTime, \"endtime_remaining\");\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n\r\n  const daysDuration = days * daySeconds;\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setloading(false);\r\n  //   }, 2000);\r\n  // });\r\n\r\n  const mobview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"14px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const tabview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"24px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps2}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const browview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"35px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\r\n      {remainingTime > 0 ? (\r\n        <div>\r\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport LiveQuestionCard from \"../AboutQuiz/LiveQuestionCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport firebase from \"../firebase\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nexport default function ScheduledLiveAboutQuiz({ match }) {\r\n  const database = firebase.firestore();\r\n\r\n  let dispatch = useDispatch();\r\n  const [today, settoday] = useState();\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const [quesArray, setquesArray] = useState([]);\r\n  const [answersArray, setanswersArray] = useState([]);\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [loading, setloading] = useState(true);\r\n  const [dataurl, setdataurl] = useState([]);\r\n\r\n  async function getDoc() {\r\n    setloading(true);\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"aboutquiz\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n    // setloading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/AboutQuiz/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n        var quesArray = snapshot.val().quesArray;\r\n        setquesArray(quesArray);\r\n        var answersArray = snapshot.val().answersArray;\r\n        setanswersArray(answersArray);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\", height: \"100vh\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ backgroundColor: \"#70cff3\" }}>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"BallTriangle\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <div>\r\n            {new Date(Livelinks.Bday_date) -\r\n              +new Date() -\r\n              19800000 -\r\n              86400000 * (dataurl.length - today - 1) >\r\n            0 ? (\r\n              <div>\r\n                <h5 className=\"example\"> This Gift opens in </h5>\r\n                <CircleTimer\r\n                  Bday={\r\n                    +new Date(Livelinks.Bday_date) -\r\n                    +new Date() -\r\n                    19800000 -\r\n                    86400000 * (dataurl.length - today - 1)\r\n                  }\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <center>\r\n                  {\" \"}\r\n                  {dataurl.length - today - 1 == 0 ? (\r\n                    <h1 className=\"example\">The Big day is here !!!</h1>\r\n                  ) : dataurl.length - today - 1 == 1 ? (\r\n                    <h1 className=\"example\">\r\n                      {dataurl.length - today - 1} day to go !!!\r\n                    </h1>\r\n                  ) : (\r\n                    <h1 className=\"example\">\r\n                      {dataurl.length - today - 1} days to go !!!\r\n                    </h1>\r\n                  )}\r\n                </center>\r\n                {console.log(quesArray, \"quesarray\")}\r\n                {console.log(answersArray, \"answerArray\")}\r\n                <LiveQuestionCard\r\n                  quesArray={quesArray}\r\n                  answersArray={answersArray}\r\n                  fbimg={fbimg}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AboutQuiz","quesArray","answersArray","fbimg","useState","showplayAgain","setshowPlayagain","correct","setcorrect","quesnumber","setquesnumber","length","divheight","bgcolrs","setbgcolrs","getRandomInt","max","Math","floor","random","className","style","backgroundImage","transition","width","maxwidth","margin","backgroundSize","src","alt","map","item","index","backgroundColor","height","opacity","color","fontSize","fontWeight","lineHeight","textAlign","class","onClick","console","log","items","question2_live","maxWidth","options","sheeps","num","handleoptionclick","require","images","slug","daystep","useSelector","state","database","firebase","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","url","id","href","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","remainingTime","daysDuration","ceil","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","ScheduledLiveAboutQuiz","match","dispatch","useDispatch","today","settoday","setfbimg","setquesArray","setanswersArray","Livelinks","setLivelinks","loading","setloading","params","payload","ref","once","then","img","val","calculateTimeLeft","Date","getFullYear","difference","Bday_date","timeLeft","days","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push"],"sourceRoot":""}