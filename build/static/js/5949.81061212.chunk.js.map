{"version":3,"file":"static/js/5949.81061212.chunk.js","mappings":"+OAwGA,IAnGA,YAAwC,IAATA,EAAQ,EAARA,KACrBC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAzCF,QACFG,EAAWC,EAAAA,GAAAA,YACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KACA,GADA,MACgCD,EAAAA,EAAAA,WAAS,IAAzC,eAAOE,EAAP,KAAiBC,EAAjB,MACAC,EAAAA,EAAAA,YAAU,WACRC,OAAOC,iBAAiB,SAAUC,KACjC,IACH,IAAMA,EAAmB,WACnBF,OAAOG,SAAW,IACpBL,GAAY,GAEZA,GAAY,IAZqB,SAetBM,IAfsB,uEAerC,oGACyBX,EAASY,WAAW,aAAaC,IAAIjB,GAAMkB,MADpE,cACQC,EADR,gBAEqBA,EAASC,OAAOC,WAFrC,cAIOC,KAAI,SAACC,EAAMC,GACdjB,EAAQiB,GAASD,EAAKE,OAL1B,4CAfqC,sBA2BrC,OAJAf,EAAAA,EAAAA,YAAS,iBAAC,8FACFK,IADE,2CAEP,IAGD,2BACE,uBACEW,MACGlB,EAEG,8DADA,gDAGNmB,GAAG,WAEH,uBAAKD,MAAM,aACT,qBAAGA,MAAM,iCAAiCE,KAAI,KAC5C,uBAAKC,IAAKC,EAAQ,OAA+BC,IAAI,MAEvD,0BACEL,MAAM,sCACNM,KAAK,SACL,cAAY,WACZ,cAAY,oBACZ,gBAAc,mBACd,gBAAc,QACd,aAAW,qBAPb,OAUE,qBAAGN,MAAM,sBAEX,uBAAKA,MAAM,2BAA2BC,GAAG,oBACvC,sBAAID,MAAM,qCACR,sBAAIA,MAAM,YACR,qBAAGA,MAAM,6BAA6BE,KAAK,UAA3C,UAIF,sBAAIF,MAAM,YACR,qBACEA,MAAM,6BACNE,KAAI,8BAAyB5B,IAF/B,SAODO,EAAQe,KAAI,SAACC,EAAMC,GAClB,GAAY,IAARD,EACF,OAAIC,GAASvB,EAAQgC,IAAM,EAEvB,sBAAIP,MAAM,aACR,qBACEA,MAAM,oCACNE,KAAML,GAFR,OAIOC,EAAQ,IAMnB,sBAAIE,MAAM,aACR,qBAAGA,MAAM,6BAA6BE,KAAML,GAA5C,OACOC,EAAQ,c,iHCtF/BU,EAAgB,GAChBC,EAAc,KACdC,EAAa,MAEbC,EAAa,CACjBC,WAAW,EACXC,KAAM,IACNC,YAAa,GAETC,EAAc,CAClBH,WAAW,EACXC,KAAM,GACNC,YAAa,GAETE,EAAc,CAClBJ,WAAW,EACXC,KAAM,IACNC,YAAa,GAETG,EAAa,SAACC,EAAWC,GAC7B,OACE,uBAAKC,UAAU,gBACb,uBAAKA,UAAU,QAAQD,GACvB,2BAAMD,KAKNG,EAAiB,SAACF,GAAD,OAAWX,EAAgBW,EAAO,IAAQ,GAC3DG,EAAiB,SAACH,GAAD,OAAYA,EAAOV,EAAeD,EAAiB,GACpEe,EAAe,SAACJ,GAAD,OAAYA,EAAOT,EAAcD,EAAe,GAC/De,EAAc,SAACL,GAAD,OAAWA,EAAOT,EAAc,GAErC,SAASe,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,GAA8B9C,EAAAA,EAAAA,WAAS,GAAvC,eAGM+C,GAHN,UAGgBD,EAAO,KACvBE,QAAQC,IAAIF,EAAS,WAErB,IAAMG,EAAgBH,EALJ,EAMlBC,QAAQC,IAAIC,EAAe,qBAC3B,IAEMC,EAFOC,KAAKC,KAAKH,EAAgBpB,GAEXA,EAuM5B,OACE,uBAAKwB,MAAO,CAAEC,WAAY,OAAQC,cAAe,SAC9CN,EAAgB,EACf,2BACGO,EAAAA,GAlML,uBACEH,MAAO,CACLI,QAAS,OACTC,eAAgB,eAChBC,SAAU,SAGZ,gBAAC,EAAAC,qBAAD,iBACM1B,EADN,CAEE2B,OAAQ,CAAC,CAAC,YACVC,SAAUZ,EACVa,qBAAsBd,KAErB,gBAAGe,EAAH,EAAGA,YAAH,OACC5B,EAAW,OAAQO,EAAYO,EAAec,EAAc,SAGhE,gBAAC,EAAAJ,qBAAD,iBACM1B,EADN,CAEE2B,OAAQ,CAAC,CAAC,YACVC,SAAUjC,EACVkC,qBAAsBd,EAAgBpB,EACtCoC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmBtC,OAGpC,gBAAGoC,EAAH,EAAGA,YAAH,OACC5B,EAAW,QAASM,EAAab,EAAamC,EAAc,SAGhE,gBAAC,EAAAJ,qBAAD,iBACM1B,EADN,CAEE2B,OAAQ,CAAC,CAAC,YACVC,SAAUlC,EACVmC,qBAAsBd,EAAgBrB,EACtCqC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmBvC,OAGpC,gBAAGqC,EAAH,EAAGA,YAAH,OACC5B,EACE,UACAK,EAAeb,EAAcoC,EAAc,SAIjD,gBAAC,EAAAJ,qBAAD,iBACM1B,EADN,CAEE2B,OAAQ,CAAC,CAAC,YACVC,SAAUnC,EACVoC,qBAAsBd,EAAgBtB,EACtCsC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmB,OAGpC,gBAAGF,EAAH,EAAGA,YAAH,OACC5B,EAAW,UAAWI,EAAewB,QA0IXG,EAAAA,GAlIhC,uBACEd,MAAO,CACLI,QAAS,OACTC,eAAgB,eAChBC,SAAU,SAGZ,gBAAC,EAAAC,qBAAD,iBACMzB,EADN,CAEE0B,OAAQ,CAAC,CAAC,YACVC,SAAUZ,EACVa,qBAAsBd,KAErB,gBAAGe,EAAH,EAAGA,YAAH,OACC5B,EAAW,OAAQO,EAAYO,EAAec,EAAc,SAGhE,gBAAC,EAAAJ,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUjC,EACVkC,qBAAsBd,EAAgBpB,EACtCoC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmBtC,OAGpC,gBAAGoC,EAAH,EAAGA,YAAH,OACC5B,EAAW,QAASM,EAAab,EAAamC,EAAc,SAGhE,gBAAC,EAAAJ,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUlC,EACVmC,qBAAsBd,EAAgBrB,EACtCqC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmBvC,OAGpC,gBAAGqC,EAAH,EAAGA,YAAH,OACC5B,EACE,UACAK,EAAeb,EAAcoC,EAAc,SAIjD,gBAAC,EAAAJ,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUnC,EACVoC,qBAAsBd,EAAgBtB,EACtCsC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmB,OAGpC,gBAAGF,EAAH,EAAGA,YAAH,OACC5B,EAAW,UAAWI,EAAewB,QAQ3C,uBACEX,MAAO,CACLI,QAAS,OACTC,eAAgB,eAChBC,SAAU,SAGZ,gBAAC,EAAAC,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUZ,EACVa,qBAAsBd,KAErB,gBAAGe,EAAH,EAAGA,YAAH,OACC5B,EAAW,OAAQO,EAAYO,EAAec,EAAc,SAGhE,gBAAC,EAAAJ,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUjC,EACVkC,qBAAsBd,EAAgBpB,EACtCoC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmBtC,OAGpC,gBAAGoC,EAAH,EAAGA,YAAH,OACC5B,EAAW,QAASM,EAAab,EAAamC,EAAc,SAGhE,gBAAC,EAAAJ,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUlC,EACVmC,qBAAsBd,EAAgBrB,EACtCqC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmBvC,OAGpC,gBAAGqC,EAAH,EAAGA,YAAH,OACC5B,EACE,UACAK,EAAeb,EAAcoC,EAAc,SAIjD,gBAAC,EAAAJ,qBAAD,iBACM9B,EADN,CAEE+B,OAAQ,CAAC,CAAC,YACVC,SAAUnC,EACVoC,qBAAsBd,EAAgBtB,EACtCsC,WAAY,SAACC,GAAD,MAAsB,CAChCjB,EAAgBiB,EAAmB,OAGpC,gBAAGF,EAAH,EAAGA,YAAH,OACC5B,EAAW,UAAWI,EAAewB,SAYvC,Q,uMCtPK,SAASI,EAAT,GAA8C,IAAVC,EAAS,EAATA,MAC3CxE,EAAWC,EAAAA,GAAAA,YAEbwE,GAAWC,EAAAA,EAAAA,MACf,GAA0BxE,EAAAA,EAAAA,YAA1B,eAAOyE,EAAP,KAAcC,EAAd,KACA,GAA0B1E,EAAAA,EAAAA,UAAS,IAAnC,eAAO2E,EAAP,KAAcC,EAAd,KACA,GAAgC5E,EAAAA,EAAAA,UAAS,IAAzC,eAAO6E,EAAP,KAAiBC,EAAjB,KACA,GAAkC9E,EAAAA,EAAAA,UAAS,IAA3C,eAAO+E,EAAP,KAAkBC,EAAlB,KACA,GAAkChF,EAAAA,EAAAA,UAAS,IAA3C,eAAOiF,EAAP,KAAkBC,EAAlB,KACA,GAA8BlF,EAAAA,EAAAA,WAAS,GAAvC,eAAOmF,EAAP,KAAgBC,EAAhB,KACA,GAA8BpF,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,UAV0D,SAY3CQ,IAZ2C,uEAY1D,6FACE2E,GAAW,GADb,SAEyBtF,EACpBY,WAAW,aACXC,IAAI2D,EAAMe,OAAO3F,MACjBkB,MALL,OAEQC,EAFR,OAMQC,EAAOD,EAASC,OACtBoE,EAAapE,GACbA,EAAKC,WAAWC,KAAI,SAACC,EAAMC,GACV,eAAXD,EAAKI,KACPqD,EAASxD,GACTqD,EAAS,CACP7C,KAAM,cACN4D,QAAS,CAAE3D,IAAKT,EAAQ,MAG5BjB,EAAQiB,GAASD,EAAKE,OAhB1B,4CAZ0D,uBA+B1Df,EAAAA,EAAAA,YAAS,iBAAC,8FACFK,IADE,OAER2E,GAAW,GAFH,2CAGP,KAEHhF,EAAAA,EAAAA,YAAU,WACRgF,GAAW,GACKrF,EAAAA,GAAAA,WAEbwF,IAAI,gBAAkBjB,EAAMe,OAAOhE,IACnCmE,KAAK,SACLC,MAAK,SAAC5E,GACL,IAAI6E,EAAM7E,EAAS8E,MAAMxE,IACzByD,EAASc,GACT,IAAIE,EAAO/E,EAAS8E,MAAMd,SAC1BC,EAAYc,GACZ,IAAIC,EAAOhF,EAAS8E,MAAMZ,UAC1BC,EAAaa,GACbT,GAAW,QAEd,IAEH,IAAMU,EAAoB,YACb,IAAIC,MAAOC,cAAtB,IACIC,GACD,IAAIF,KAAKd,EAAUiB,YACnB,IAAIH,KACL,MACA,OAAY9F,EAAQkG,OAAS1B,GAC/BzB,QAAQC,IAAIgD,EAAY,cACxB,IAAIG,EAAW,GAWf,OATIH,EAAa,IACfG,EAAW,CACTC,KAAMjD,KAAKkD,MAAML,EAAU,OAC3BM,MAAOnD,KAAKkD,MAAOL,EAAU,KAAuB,IACpDO,QAASpD,KAAKkD,MAAOL,EAAa,IAAO,GAAM,IAC/CQ,QAASrD,KAAKkD,MAAOL,EAAa,IAAQ,MAIvCG,GAGT,GAAgCpG,EAAAA,EAAAA,UAAS8F,KAAzC,eAAOM,EAAP,KAAiBM,EAAjB,MAEAtG,EAAAA,EAAAA,YAAU,WACRuG,YAAW,WACTD,EAAYZ,OACX,QAEL,IAAMc,EAAkB,GAcxB,OAZAC,OAAOC,KAAKV,GAAUW,SAAQ,SAACC,GACxBZ,EAASY,IAIdJ,EAAgBK,KACd,4BACGb,EAASY,GADZ,IACwBA,EAAU,SAMpC,uBAAK1D,MAAO,CAAE4D,gBAAiB,UAAWC,OAAQ,UAChD,gBAAC,IAAD,CAAqBzH,KAAM4E,EAAMe,OAAO3F,OACxC,2BACA,2BACA,2BACA,uBAAK4D,MAAO,CAAE4D,gBAAiB,YAC5B/B,EACC,gBAAC,IAAD,CACEzD,KAAK,eACL0F,MAAM,UACND,OAAQ,IACRE,MAAO,MAGT,2BACG,IAAItB,KAAKd,EAAUiB,YACjB,IAAIH,KACL,MACA,OAAY9F,EAAQkG,OAAS1B,EAAQ,GACvC,EACE,2BACE,sBAAIjC,UAAU,WAAd,wBACA,gBAAC,IAAD,CACEM,MACG,IAAIiD,KAAKd,EAAUiB,YACnB,IAAIH,KACL,MACA,OAAY9F,EAAQkG,OAAS1B,EAAQ,MAK3C,2BACE,8BACG,IACAxE,EAAQkG,OAAS1B,EAAQ,GAAK,EAC7B,sBAAIjC,UAAU,WAAd,2BACEvC,EAAQkG,OAAS1B,EAAQ,GAAK,EAChC,sBAAIjC,UAAU,WACXvC,EAAQkG,OAAS1B,EAAQ,EAD5B,kBAIA,sBAAIjC,UAAU,WACXvC,EAAQkG,OAAS1B,EAAQ,EAD5B,oBAKJ,gBAAC,IAAD,CACEI,SAAUA,EACVE,UAAWA,EACXJ,MAAOA,U,qECvJV,SAAS2C,EAAT,GAAsD,IAA/B3C,EAA8B,EAA9BA,MAAOE,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,UACrD,OACE,uBACEzB,MAAO,CACLiE,gBAAgB,6BAAD,OAA+B1C,EAA/B,aAA4CE,EAA5C,OAGjB,uBAAKzB,MAAO,CAAEC,WAAY,MAAQf,UAAU,eAC1C,uBAAKpB,MAAM,aACT,uBAAKA,MAAM,WACT,uBACEkC,MAAO,CAAEiE,gBAAiB,OAAS5C,EAAQ,KAC3CvD,MAAM,mBAER,uBACEkC,MAAO,CAAEiE,gBAAiB,OAAS5C,EAAQ,KAC3CvD,MAAM,oBAGV,uBAAKA,MAAM,WACT,uBACEkC,MAAO,CAAEiE,gBAAiB,OAAS5C,EAAQ,KAC3CvD,MAAM,mBAER,uBACEkC,MAAO,CAAEiE,gBAAiB,OAAS5C,EAAQ,KAC3CvD,MAAM,oBAGV,uBAAKA,MAAM,WACT,uBACEkC,MAAO,CAAEiE,gBAAiB,OAAS5C,EAAQ,KAC3CvD,MAAM,mBAER,uBACEkC,MAAO,CAAEiE,gBAAiB,OAAS5C,EAAQ,KAC3CvD,MAAM,yB","sources":["NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveThreeDImage.js","ThreeDImage/ThreeDImage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport { useSelector } from \"react-redux\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction ScheduledLiveNavBar({ slug }) {\n  const { daystep } = useSelector((state) => ({ ...state }));\n  const database = firebase.firestore();\n  const [dataurl, setdataurl] = useState([]);\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  async function getDoc() {\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\n    const data = await snapshot.data().array_data;\n\n    data.map((item, index) => {\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(async () => {\n    await getDoc();\n  }, []);\n\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link js-scroll-trigger\"\n                  href={`/scheduledlive/main/${slug}`}\n                >\n                  Home\n                </a>\n              </li>\n              {dataurl.map((item, index) => {\n                if (item != \"\") {\n                  if (index == daystep.day - 1) {\n                    return (\n                      <li class=\"nav-item \">\n                        <a\n                          class=\"nav-link js-scroll-trigger active\"\n                          href={item}\n                        >\n                          Day {index + 1}\n                        </a>\n                      </li>\n                    );\n                  }\n                  return (\n                    <li class=\"nav-item \">\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\n                        Day {index + 1}\n                      </a>\n                    </li>\n                  );\n                }\n              })}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default ScheduledLiveNavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Loader from \"react-loader-spinner\";\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 190,\n  strokeWidth: 6,\n};\nconst timerProps1 = {\n  isPlaying: true,\n  size: 80,\n  strokeWidth: 3,\n};\nconst timerProps2 = {\n  isPlaying: true,\n  size: 150,\n  strokeWidth: 4,\n};\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\nconst getTimeDays = (time) => (time / daySeconds) | 0;\n\nexport default function CircleTimer({ Bday }) {\n  const [loading, setloading] = useState(false);\n  const startTime = 0;\n\n  const endTime = Bday / 1000;\n  console.log(endTime, \"endtime\");\n\n  const remainingTime = endTime - startTime;\n  console.log(remainingTime, \"endtime_remaining\");\n  const days = Math.ceil(remainingTime / daySeconds);\n\n  const daysDuration = days * daySeconds;\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setloading(false);\n  //   }, 2000);\n  // });\n\n  const mobview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"14px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const tabview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"24px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps2}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const browview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"35px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  return (\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\n      {remainingTime > 0 ? (\n        <div>\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ThreeDImage from \"../ThreeDImage/ThreeDImage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport firebase from \"../firebase\";\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\nimport CircleTimer from \"./CircleTimer\";\nexport default function ScheduledLiveThreeDImage({ match }) {\n  const database = firebase.firestore();\n\n  let dispatch = useDispatch();\n  const [today, settoday] = useState();\n  const [fbimg, setfbimg] = useState(\"\");\n  const [firstcol, setfirstcol] = useState(\"\");\n  const [secondcol, setsecondcol] = useState(\"\");\n  const [Livelinks, setLivelinks] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [dataurl, setdataurl] = useState([]);\n\n  async function getDoc() {\n    setloading(true);\n    const snapshot = await database\n      .collection(\"Livelinks\")\n      .doc(match.params.slug)\n      .get();\n    const data = snapshot.data();\n    setLivelinks(data);\n    data.array_data.map((item, index) => {\n      if (item.id == \"threedimage\") {\n        settoday(index);\n        dispatch({\n          type: \"ACTIVE_STEP\",\n          payload: { day: index + 1 },\n        });\n      }\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(async () => {\n    await getDoc();\n    setloading(false);\n  }, []);\n\n  useEffect(() => {\n    setloading(true);\n    const todoRef = firebase\n      .database()\n      .ref(\"/ThreeDImage/\" + match.params.id)\n      .once(\"value\")\n      .then((snapshot) => {\n        var img = snapshot.val().url;\n        setfbimg(img);\n        var col1 = snapshot.val().firstcol;\n        setfirstcol(col1);\n        var col2 = snapshot.val().secondcol;\n        setsecondcol(col2);\n        setloading(false);\n      });\n  }, []);\n\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    var difference =\n      +new Date(Livelinks.Bday_date) -\n      +new Date() -\n      19800000 -\n      86400000 * (dataurl.length - today);\n    console.log(difference, \"difference\");\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div style={{ backgroundColor: \"#70cff3\", height: \"100vh\" }}>\n      <ScheduledLiveNavBar slug={match.params.slug} />\n      <br />\n      <br />\n      <br />\n      <div style={{ backgroundColor: \"#70cff3\" }}>\n        {loading ? (\n          <Loader\n            type=\"BallTriangle\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n          />\n        ) : (\n          <div>\n            {new Date(Livelinks.Bday_date) -\n              +new Date() -\n              19800000 -\n              86400000 * (dataurl.length - today - 1) >\n            0 ? (\n              <div>\n                <h5 className=\"example\"> This Gift opens in </h5>\n                <CircleTimer\n                  Bday={\n                    +new Date(Livelinks.Bday_date) -\n                    +new Date() -\n                    19800000 -\n                    86400000 * (dataurl.length - today - 1)\n                  }\n                />\n              </div>\n            ) : (\n              <div>\n                <center>\n                  {\" \"}\n                  {dataurl.length - today - 1 == 0 ? (\n                    <h1 className=\"example\">The Big day is here !!!</h1>\n                  ) : dataurl.length - today - 1 == 1 ? (\n                    <h1 className=\"example\">\n                      {dataurl.length - today - 1} day to go !!!\n                    </h1>\n                  ) : (\n                    <h1 className=\"example\">\n                      {dataurl.length - today - 1} days to go !!!\n                    </h1>\n                  )}\n                </center>\n                <ThreeDImage\n                  firstcol={firstcol}\n                  secondcol={secondcol}\n                  fbimg={fbimg}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./ThreeDImage.css\";\n\nexport default function ThreeDImage({ fbimg, firstcol, secondcol }) {\n  return (\n    <div\n      style={{\n        backgroundImage: `linear-gradient(to right, ${firstcol}, ${secondcol})`,\n      }}\n    >\n      <div style={{ paddingTop: \"5%\" }} className=\"ThreeDImage\">\n        <div class=\"tdexample\">\n          <div class=\"tdblock\">\n            <div\n              style={{ backgroundImage: \"url(\" + fbimg + \")\" }}\n              class=\"tdside -tdmain\"\n            ></div>\n            <div\n              style={{ backgroundImage: \"url(\" + fbimg + \")\" }}\n              class=\"tdside -tdleft\"\n            ></div>\n          </div>\n          <div class=\"tdblock\">\n            <div\n              style={{ backgroundImage: \"url(\" + fbimg + \")\" }}\n              class=\"tdside -tdmain\"\n            ></div>\n            <div\n              style={{ backgroundImage: \"url(\" + fbimg + \")\" }}\n              class=\"tdside -tdleft\"\n            ></div>\n          </div>\n          <div class=\"tdblock\">\n            <div\n              style={{ backgroundImage: \"url(\" + fbimg + \")\" }}\n              class=\"tdside -tdmain\"\n            ></div>\n            <div\n              style={{ backgroundImage: \"url(\" + fbimg + \")\" }}\n              class=\"tdside -tdleft\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["slug","daystep","useSelector","state","database","firebase","useState","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","map","item","index","url","class","id","href","src","require","alt","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","className","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","Math","ceil","style","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","ScheduledLiveThreeDImage","match","dispatch","useDispatch","today","settoday","fbimg","setfbimg","firstcol","setfirstcol","secondcol","setsecondcol","Livelinks","setLivelinks","loading","setloading","params","payload","ref","once","then","img","val","col1","col2","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","backgroundColor","height","color","width","ThreeDImage","backgroundImage"],"sourceRoot":""}