{"version":3,"file":"static/js/7722.4d25fd42.chunk.js","mappings":"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","sources":["NavBars/NavBar.js","Studio/HeaderBtn.js","Utils/Copy.js","Utils/CropPage.js","Utils/Share.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nexport default function DummyNavBar() {\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  let dispatch = useDispatch();\n  let history = useHistory();\n  // spread operater\n  let { user } = useSelector((state) => ({ ...state }));\n\n  const logout = () => {\n    firebase.auth().signOut();\n    dispatch({\n      type: \"LOGOUT\",\n      payload: null,\n    });\n    history.push(\"/login\");\n  };\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a\n            class=\"navbar-brand js-scroll-trigger center column nav-title\"\n            href={`/`}\n          >\n            <img\n              src={require(\"../Images/giftshublogo.png\")}\n              alt=\"giftshublogo\"\n              className=\"giftshublogoimg\"\n            />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto nav-flex-icons\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link js-scroll-trigger\" href={`/`}>\n                  HOME\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href={`/aboutus`}>\n                  ABOUT US\n                </a>\n              </li>\n              {!user ? (\n                <>\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" href={`/login`}>\n                      LOGIN\n                    </a>\n                  </li>\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  <li class=\"nav-item\">\n                    <a\n                      class=\"nav-link js-scroll-trigger\"\n                      href={`/userpackspage`}\n                    >\n                      MY PACKS\n                    </a>\n                  </li>\n                  <li class=\"nav-item avatar dropdown\">\n                    <a\n                      class=\"nav-link dropdown-toggle p-0\"\n                      id=\"navbarDropdownMenuLink-5\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      {user.email.split(\"@\")[0]}\n                      {user.profilepic ? (\n                        <img\n                          width=\"40\"\n                          src={user.profilepic}\n                          class=\"md-avatar rounded-circle ml-3\"\n                          alt=\"avatar image\"\n                        />\n                      ) : (\n                        <img\n                          width=\"40\"\n                          src={require(\"../Images/userdefaultavatar.png\")}\n                          class=\"md-avatar rounded-circle ml-3\"\n                          alt=\"avatar image\"\n                        />\n                      )}{\" \"}\n                    </a>\n\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right dropdown-secondary\"\n                      aria-labelledby=\"navbarDropdownMenuLink-5\"\n                    >\n                      <li class=\"nav-item \">\n                        {user && (\n                          <a onClick={logout} class=\"nav-link\" href={`/login`}>\n                            Logout\n                          </a>\n                        )}\n                      </li>\n                    </div>\n                  </li>\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./HeaderBtn.css\";\n\nfunction HeaderBtn({ selected, Icon, title, handleClick }) {\n  return (\n    <div\n      onClick={handleClick}\n      className={`HeaderBtn ${selected && \"selected\"}`}\n    >\n      <Icon className=\"HeaderBtn__icon\" />\n      <h2 className=\"HeaderBtn__title\"> {title} </h2>{\" \"}\n    </div>\n  );\n}\n\nexport default HeaderBtn;\n","import React, { useState } from \"react\";\nimport useClipboard from \"react-use-clipboard\";\n\nimport HeaderBtn from \"../Studio/HeaderBtn\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nexport default function Copy({ livelink }) {\n  const [isCopied, setCopied] = useClipboard(`${livelink}`, {\n    // `isCopied` will go back to `false` after 1000ms.\n    successDuration: 1000,\n  });\n  return (\n    <div className=\"App\">\n      <HeaderBtn\n        Icon={FileCopyIcon}\n        title={isCopied ? \"link Copied! 👍\" : \"Copy link to Clipboard\"}\n        handleClick={setCopied}\n      />\n    </div>\n  );\n}\n","import React, {\n  useMemo,\n  useState,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport HeaderBtn from \"../Studio/HeaderBtn\";\nimport Modal from \"@material-ui/core/Modal\";\nimport ReactCrop from \"react-image-crop\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    borderRadius: \"5px\",\n    width: \"80vw\",\n    height: \"auto\",\n    minWidth: \"320px\",\n    maxWidth: \"840px\",\n    position: \"absolute\",\n    color: \"#ffffff\",\n    marginTop: \"0vh\",\n    marginBottom: \"0vh\",\n    border: null,\n    backgroundColor: \"#009dd9\",\n    // overflow: \"auto\",\n    padding: theme.spacing(0, 0, 0),\n  },\n  DelBut: {\n    position: \"sticky\",\n    bottom: theme.spacing(142),\n    left: theme.spacing(250),\n  },\n}));\n\nfunction CropPage({\n  send,\n  setfbimg,\n  setimage_url,\n  aspect_ratio,\n  setopencrop,\n  opencrop,\n}) {\n  const def = {\n    unit: \"%\",\n    width: 50,\n    aspect: aspect_ratio,\n  };\n\n  const classes = useStyles();\n\n  const [upImg, setUpImg] = useState(send);\n  const previewCanvasRef = useRef(null);\n  const imgRef = useRef(null);\n  const pixelRatio = window.devicePixelRatio || 1;\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const [crop, setCrop] = useState(def);\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = crop.width * pixelRatio;\n    canvas.height = crop.height * pixelRatio;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n  }, [completedCrop]);\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n  function getResizedCanvas(canvas, newWidth, newHeight) {\n    const tmpCanvas = document.createElement(\"canvas\");\n    tmpCanvas.width = newWidth;\n    tmpCanvas.height = newHeight;\n\n    const ctx = tmpCanvas.getContext(\"2d\");\n    ctx.drawImage(\n      canvas,\n      0,\n      0,\n      canvas.width,\n      canvas.height,\n      0,\n      0,\n      newWidth,\n      newHeight\n    );\n\n    return tmpCanvas;\n  }\n  function generateDownload(previewCanvas, crop) {\n    if (!crop || !previewCanvas) {\n      return;\n    }\n\n    const canvas = getResizedCanvas(previewCanvas, crop.width, crop.height);\n    var base64Image = canvas.toDataURL(\"image/jpeg\", 1.0);\n    setfbimg(base64Image);\n\n    var base64Img = base64Image.replace(\"data:image/jpeg;base64,\", \"\");\n    setimage_url(base64Img);\n\n    canvas.toBlob(\n      (blob) => {\n        const previewUrl = window.URL.createObjectURL(blob);\n\n        window.URL.revokeObjectURL(previewUrl);\n      },\n      \"image/png\",\n      1\n    );\n\n    setopencrop(false);\n  }\n\n  return (\n    <div>\n      <Modal\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginRight: \"auto\",\n          // overflow: \"hidden\",\n          alignItems: \"center\",\n        }}\n        open={opencrop}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {\n          <div className={classes.paper}>\n            <div>\n              <br />\n              <br />\n              <br />\n              <center>\n                <ReactCrop\n                  imageStyle={{\n                    minWidth: \"290px\",\n                    maxWidth: \"800px\",\n                    maxHeight: \"450px\",\n                    width: \"100%\",\n                  }}\n                  src={upImg}\n                  onImageLoaded={onLoad}\n                  crop={crop}\n                  onChange={(c) => setCrop(c)}\n                  onComplete={(c) => setCompletedCrop(c)}\n                />\n              </center>\n              <div style={{ display: \"none\" }}>\n                <canvas\n                  ref={previewCanvasRef}\n                  style={{\n                    width: Math.round(completedCrop?.width ?? 0),\n                    height: Math.round(completedCrop?.height ?? 0),\n                  }}\n                />\n              </div>\n              <div>\n                <center>\n                  <div>\n                    {\" \"}\n                    <HeaderBtn\n                      handleClick={() => {\n                        generateDownload(\n                          previewCanvasRef.current,\n                          completedCrop\n                        );\n                      }}\n                      Icon={ImageIcon}\n                      title=\" Use cropped image\"\n                    />\n                  </div>\n                </center>\n              </div>\n            </div>\n\n            <Fab\n              onClick={() => {\n                setopencrop(false);\n              }}\n              className={classes.DelBut}\n              color=\"primary\"\n              aria-label=\"add\"\n            >\n              <CloseIcon />\n            </Fab>\n          </div>\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default CropPage;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport HeaderBtn from \"../Studio/HeaderBtn\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport emailjs from \"emailjs-com\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n} from \"react-share\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\nfunction Share({ livelink, from, to }) {\n  const [showform, setshowform] = useState(false);\n  const classes = useStyles();\n  const [receiverEmail, setreceiverEmail] = useState();\n  const [giftshub, setgiftshub] = useState(\"https://www.google.com/\");\n\n  const [title, settitle] = useState(\n    `Dear ${to}, a gift from ${from} is waiting for you at ${livelink}. Made by ${giftshub} with love`\n  );\n  const [title1, settitle1] = useState(\n    `Dear ${to}, a gift  is waiting for you at ${livelink}. Made by ${giftshub}`\n  );\n\n  function sendEmail(e) {\n    var items = {\n      to_name: to,\n      from_name: from,\n      to_email: receiverEmail,\n      gift_link: livelink,\n    };\n\n    emailjs\n      .send(\n        \"gifts_hub\",\n        \"template_d9tubms\",\n        items,\n        \"user_2oABpGWP8WfHfd6Kmlto3\"\n      )\n      .then(\n        (response) => {\n          console.log(\"SUCCESS!\", response.status, response.text);\n        },\n        (err) => {\n          console.log(\"FAILED...\", err);\n        }\n      );\n  }\n\n  return (\n    <div className=\"App\">\n      <FacebookShareButton\n        windowWidth=\"500px\"\n        windowHeight=\"500px\"\n        url={livelink}\n        title={title1}\n      >\n        <HeaderBtn Icon={FacebookIcon} title=\"Facebook \" />\n      </FacebookShareButton>\n      <br />\n      <TwitterShareButton\n        windowWidth=\"500px\"\n        windowHeight=\"500px\"\n        url={livelink}\n        title={title1}\n      >\n        <HeaderBtn Icon={TwitterIcon} title=\"Twitter \" />\n      </TwitterShareButton>\n      <br />\n      <div>\n        {\" \"}\n        <WhatsappShareButton\n          windowWidth=\"500px\"\n          windowHeight=\"500px\"\n          url={livelink}\n          title={title}\n          separator=\"::\"\n        >\n          <HeaderBtn Icon={WhatsAppIcon} title=\"Whatsapp \" />\n        </WhatsappShareButton>\n      </div>{\" \"}\n      <div>\n        {showform ? (\n          <form\n            onSubmit={(e) => {\n              sendEmail();\n            }}\n            className={classes.root}\n          >\n            <div\n              style={{\n                width: \"200px\",\n\n                marginTop: \"20px\",\n              }}\n              className=\"RightSideBar2__Btn\"\n            >\n              <CreateIcon\n                style={{\n                  margin: \"0 10px 0 5px\",\n                  color: \"#ffffff\",\n                  fontSize: \"large\",\n                }}\n              />\n              <input\n                required\n                style={{ width: \"100%\", color: \"#000\" }}\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                onChange={(e) => setreceiverEmail(e.target.value)}\n              />\n            </div>\n            <input\n              style={{ display: \"none\" }}\n              id=\"receiverEmail\"\n              type=\"submit\"\n            />\n            <label htmlFor=\"receiverEmail\">\n              <HeaderBtn Icon={ImageIcon} title=\"Send Email \" />\n            </label>\n          </form>\n        ) : (\n          <HeaderBtn\n            handleClick={() => {\n              setshowform(true);\n            }}\n            Icon={MailIcon}\n            title=\"Email \"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Share;\n"],"names":["DummyNavBar","useState","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","dispatch","useDispatch","history","useHistory","user","useSelector","state","class","id","href","src","require","alt","className","type","email","split","profilepic","width","onClick","firebase","signOut","payload","push","selected","Icon","title","handleClick","Copy","livelink","useClipboard","successDuration","isCopied","setCopied","FileCopyIcon","useStyles","makeStyles","theme","paper","borderRadius","height","minWidth","maxWidth","position","color","marginTop","marginBottom","border","backgroundColor","padding","spacing","DelBut","bottom","left","send","setfbimg","setimage_url","aspect_ratio","setopencrop","opencrop","def","unit","aspect","classes","upImg","previewCanvasRef","useRef","imgRef","pixelRatio","devicePixelRatio","completedCrop","setCompletedCrop","crop","setCrop","current","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","x","y","onLoad","useCallback","img","generateDownload","previewCanvas","newWidth","newHeight","tmpCanvas","document","createElement","getResizedCanvas","base64Image","toDataURL","base64Img","replace","toBlob","blob","previewUrl","URL","createObjectURL","revokeObjectURL","style","display","justifyContent","marginRight","alignItems","open","imageStyle","maxHeight","onImageLoaded","onChange","c","onComplete","ref","Math","round","ImageIcon","root","margin","from","to","showform","setshowform","receiverEmail","setreceiverEmail","giftshub","title1","windowWidth","windowHeight","url","FacebookIcon","TwitterIcon","separator","WhatsAppIcon","onSubmit","e","items","to_name","from_name","to_email","gift_link","emailjs","then","response","console","log","status","text","err","sendEmail","fontSize","required","name","target","value","htmlFor","MailIcon"],"sourceRoot":""}