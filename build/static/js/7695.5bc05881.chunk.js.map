{"version":3,"file":"static/js/7695.5bc05881.chunk.js","mappings":"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","sources":["EnvelopeGreetingCard/EnvelopeGreetingCard.js","ScheduledLivePages/ScheduledLiveEnvelopeGreetCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./EnvelopeGreetingCard.css\";\nimport { BrowserView, MobileView, TabletView } from \"react-device-detect\";\nexport default function EnvelopeGreetingCard({\n  fbimg,\n  message,\n  occassion,\n  totext,\n  fromtext,\n}) {\n  const [mainclass, setmainclass] = useState(\"new\");\n  const handlechangeclass = () => {\n    if (mainclass === \"new\") {\n      setmainclass(\"open\");\n    }\n  };\n  return (\n    <div className=\"envelopecardbody\">\n      <div\n        onClick={() => {\n          handlechangeclass();\n        }}\n        className={`envelope ${mainclass} `}\n      >\n        <div class=\"EnvelopeGreetingCardfront\">\n          <div class=\"EnvelopeGreetingCardmail\">\n            <p>{occassion}</p>\n            <p>Click me</p>\n          </div>\n        </div>\n        <div class=\"EnvelopeGreetingCardback\">\n          <div\n            style={{\n              backgroundImage: \"url(\" + fbimg + \")\",\n            }}\n            class=\"EnvelopeGreetingCardletter\"\n          >\n            <p> {message} </p>\n            <p>{fromtext}</p>\n            <p>{totext}</p>\n            <div class=\"EnvelopeGreetingCardbox\">\n              <div class=\"EnvelopeGreetingCardcake\">\n                <div class=\"EnvelopeGreetingCardcandle\">\n                  <div class=\"EnvelopeGreetingCardfire\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"EnvelopeGreetingCardflip left-EnvelopeGreetingCardflip\"></div>\n          <div class=\"EnvelopeGreetingCardflip right-EnvelopeGreetingCardflip\"></div>\n          <div class=\"EnvelopeGreetingCardflip bottom-EnvelopeGreetingCardflip\"></div>\n          <div class=\"EnvelopeGreetingCardflip top-EnvelopeGreetingCardflip\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EnvelopeGreetingCard from \"../EnvelopeGreetingCard/EnvelopeGreetingCard\";\nimport firebase from \"../firebase\";\nimport Loader from \"react-loader-spinner\";\nimport CircleTimer from \"./CircleTimer\";\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\nfunction ScheduledLiveEnvelopeGreetCard({ match }) {\n  let dispatch = useDispatch();\n  const [fbimg, setfbimg] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [occassion, setoccassion] = useState(\"\");\n  const [totext, settotext] = useState(\"\");\n  const [fromtext, setfromtext] = useState(\"\");\n  const database = firebase.firestore();\n  const [Livelinks, setLivelinks] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [dataurl, setdataurl] = useState([]);\n  const [today, settoday] = useState();\n  async function getDoc() {\n    const snapshot = await database\n      .collection(\"Livelinks\")\n      .doc(match.params.slug)\n      .get();\n    const data = snapshot.data();\n    setLivelinks(data);\n    data.array_data.map((item, index) => {\n      if (item.id == \"EnvelopeGreetingcard\") {\n        settoday(index);\n        dispatch({\n          type: \"ACTIVE_STEP\",\n          payload: { day: index + 1 },\n        });\n      }\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(() => {\n    getDoc();\n    console.log(Livelinks, \"liveData\");\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\n  }, []);\n  useEffect(() => {\n    setloading(true);\n    const todoRef = firebase\n      .database()\n      .ref(\"/EnvelopeGreetingCard/\" + match.params.id)\n      .once(\"value\")\n      .then((snapshot) => {\n        var img = snapshot.val().url;\n        setfbimg(img);\n        var msg = snapshot.val().message;\n        setmessage(msg);\n        var occn = snapshot.val().occassion;\n        setoccassion(occn);\n        var to_nam = snapshot.val().totext;\n        settotext(to_nam);\n        var from_nam = snapshot.val().fromtext;\n        setfromtext(from_nam);\n      });\n    setloading(false);\n  }, []);\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    var difference =\n      +new Date(Livelinks.Bday_date) -\n      +new Date() -\n      19800000 -\n      86400000 * (dataurl.length - today);\n    console.log(difference, \"difference\");\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div>\n      <ScheduledLiveNavBar slug={match.params.slug} />\n      <br />\n      <br />\n      <br />\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"1\" }}>\n          {loading ? (\n            <Loader\n              type=\"BallTriangle\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n            />\n          ) : (\n            <div>\n              {new Date(Livelinks.Bday_date) -\n                +new Date() -\n                19800000 -\n                86400000 * (dataurl.length - today - 1) >\n              0 ? (\n                <div>\n                  <h5 className=\"example\"> This Gift opens in </h5>\n                  <CircleTimer\n                    Bday={\n                      +new Date(Livelinks.Bday_date) -\n                      +new Date() -\n                      19800000 -\n                      86400000 * (dataurl.length - today - 1)\n                    }\n                  />\n                </div>\n              ) : (\n                <div>\n                  <center>\n                    {\" \"}\n                    {dataurl.length - today - 1 == 0 ? (\n                      <h1 className=\"example\">The Big day is here !!!</h1>\n                    ) : dataurl.length - today - 1 == 1 ? (\n                      <h1 className=\"example\">\n                        {dataurl.length - today - 1} day to go !!!\n                      </h1>\n                    ) : (\n                      <h1 className=\"example\">\n                        {dataurl.length - today - 1} days to go !!!\n                      </h1>\n                    )}\n                  </center>\n                  <EnvelopeGreetingCard\n                    fbimg={fbimg}\n                    message={message}\n                    occassion={occassion}\n                    totext={totext}\n                    fromtext={fromtext}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduledLiveEnvelopeGreetCard;\n"],"names":["EnvelopeGreetingCard","fbimg","message","occassion","totext","fromtext","useState","mainclass","setmainclass","className","onClick","class","style","backgroundImage","match","dispatch","useDispatch","setfbimg","setmessage","setoccassion","settotext","setfromtext","database","firebase","Livelinks","setLivelinks","loading","setloading","dataurl","today","settoday","collection","doc","params","slug","get","snapshot","data","array_data","map","item","index","id","type","payload","day","url","useEffect","getDoc","console","log","ref","once","then","img","val","msg","occn","to_nam","from_nam","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","display","flex","color","height","width","Bday"],"sourceRoot":""}