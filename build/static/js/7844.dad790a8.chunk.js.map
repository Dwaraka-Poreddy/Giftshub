{"version":3,"file":"static/js/7844.dad790a8.chunk.js","mappings":"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","sources":["NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveMainPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport { useSelector } from \"react-redux\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction ScheduledLiveNavBar({ slug }) {\n  const { daystep } = useSelector((state) => ({ ...state }));\n  const database = firebase.firestore();\n  const [dataurl, setdataurl] = useState([]);\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  async function getDoc() {\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\n    const data = await snapshot.data().array_data;\n\n    data.map((item, index) => {\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(async () => {\n    await getDoc();\n  }, []);\n\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link js-scroll-trigger\"\n                  href={`/scheduledlive/main/${slug}`}\n                >\n                  Home\n                </a>\n              </li>\n              {dataurl.map((item, index) => {\n                if (item != \"\") {\n                  if (index == daystep.day - 1) {\n                    return (\n                      <li class=\"nav-item \">\n                        <a\n                          class=\"nav-link js-scroll-trigger active\"\n                          href={item}\n                        >\n                          Day {index + 1}\n                        </a>\n                      </li>\n                    );\n                  }\n                  return (\n                    <li class=\"nav-item \">\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\n                        Day {index + 1}\n                      </a>\n                    </li>\n                  );\n                }\n              })}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default ScheduledLiveNavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Loader from \"react-loader-spinner\";\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 190,\n  strokeWidth: 6,\n};\nconst timerProps1 = {\n  isPlaying: true,\n  size: 80,\n  strokeWidth: 3,\n};\nconst timerProps2 = {\n  isPlaying: true,\n  size: 150,\n  strokeWidth: 4,\n};\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\nconst getTimeDays = (time) => (time / daySeconds) | 0;\n\nexport default function CircleTimer({ Bday }) {\n  const [loading, setloading] = useState(false);\n  const startTime = 0;\n\n  const endTime = Bday / 1000;\n  console.log(endTime, \"endtime\");\n\n  const remainingTime = endTime - startTime;\n  console.log(remainingTime, \"endtime_remaining\");\n  const days = Math.ceil(remainingTime / daySeconds);\n\n  const daysDuration = days * daySeconds;\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setloading(false);\n  //   }, 2000);\n  // });\n\n  const mobview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"14px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const tabview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"24px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps2}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const browview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"35px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  return (\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\n      {remainingTime > 0 ? (\n        <div>\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport firebase from \"../firebase\";\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\nimport CircleTimer from \"./CircleTimer\";\nimport \"./ScheduledLiveMainPage.css\";\nimport bgvideo from \"../Images/mainpagebg.mp4\";\nimport { Helmet } from \"react-helmet\";\nimport \"../LandingPage/LandingPage.css\";\nfunction ScheduledLiveMainPage({ match }) {\n  const database = firebase.firestore();\n  const [FolderData, setFolderData] = useState(\"\");\n  const [dataurl, setdataurl] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [navstate, setnavstate] = useState(false);\n  const [Livelinks, setLivelinks] = useState(\"\");\n\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  async function getDoc() {\n    const snapshot = await database\n      .collection(\"Livelinks\")\n\n      .doc(match.params.slug)\n      .get();\n    const data = snapshot.data();\n    setLivelinks(data);\n    data.array_data.map((item, index) => {\n      dataurl[index] = item.url;\n    });\n    setFolderData(data);\n  }\n  useEffect(async () => {\n    setloading(true);\n    await getDoc();\n    setloading(false);\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    var difference = +new Date(Livelinks.Bday_date) - +new Date() - 19800000;\n\n    console.log(difference, \"difference\");\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div>\n      {\" \"}\n      <Helmet>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n        <title>Gifted live main page</title>\n        <meta\n          name=\"description\"\n          content=\"Yaaay!!! A gift for you from your loved ones made using GiftsHub with love. Enjoy your day with our eternal gifts.\"\n        />\n        <meta name=\"robots\" content=\"index, follow\" />\n        <meta\n          name=\"keywords\"\n          content=\"valentine,greetings,gifts for all,gifs,gifthub,giftshub, personalised, gifts, customized, scheduled, virtual , free,e-gift, online gifts, online gift delivery, buy gifts online, online gift shop, send gifts, gifts to india, pack, gifting, free, valentines, love, n-day pack, we at gifts, valentines pack, recommended pack, gifts hub\"\n        />\n        <meta name=\"language\" content=\"EN\" />\n      </Helmet>\n      <body id=\"page-top\">\n        <ScheduledLiveNavBar slug={match.params.slug} />\n        <br />\n        <br />\n        <br />\n        <video\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n            position: \"fixed\",\n            top: \"0\",\n            left: \"0\",\n          }}\n          className=\"videoTag\"\n          autoPlay\n          loop\n          muted\n        >\n          <source src={bgvideo} type=\"video/mp4\" />\n        </video>\n        <div style={{ display: \"flex\" }}>\n          <div style={{ flex: \"0.1\" }}></div>\n          <div style={{ flex: \"0.8\" }}>\n            {loading ? (\n              <Loader\n                type=\"BallTriangle\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n              />\n            ) : (\n              <div>\n                {new Date(Livelinks.Bday_date) - +new Date() - 19800000 > 0 ? (\n                  <center>\n                    {\" \"}\n                    <CircleTimer\n                      Bday={\n                        new Date(Livelinks.Bday_date) - +new Date() - 19800000\n                      }\n                    />\n                  </center>\n                ) : (\n                  <center>\n                    {\" \"}\n                    <h1 className=\"example\">The Big day is here !!!</h1>\n                  </center>\n                )}\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <center>\n                        <img\n                          style={{\n                            width: \"100%\",\n                          }}\n                          src={require(\"../Images/giftgif.webm\")}\n                          alt=\"Heading\"\n                        />\n                      </center>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div translate=\"no\">\n                        <div class=\"livemainwrapper\">\n                          <div class=\"livemaincard\">\n                            <img src={FolderData.fbimg} alt=\"\" />\n                            <div class=\"livemaininfo\">\n                              <h1>{FolderData.From_name}</h1>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <br />\n                <br />\n                <br />\n              </div>\n            )}\n          </div>\n          <br />\n          <br />\n          <br />\n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default ScheduledLiveMainPage;\n"],"names":["slug","daystep","useSelector","state","database","firebase","useState","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","map","item","index","url","class","id","href","src","require","alt","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","className","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","Math","ceil","style","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","match","FolderData","setFolderData","loading","setloading","Livelinks","setLivelinks","params","calculateTimeLeft","Date","getFullYear","difference","Bday_date","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","Helmet","content","name","ScheduledLiveNavBar","width","height","position","top","left","autoPlay","loop","muted","bgvideo","flex","color","translate","fbimg","From_name"],"sourceRoot":""}