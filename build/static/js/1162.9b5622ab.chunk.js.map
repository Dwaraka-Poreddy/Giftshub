{"version":3,"file":"static/js/1162.9b5622ab.chunk.js","mappings":"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","sources":["EnvelopeGreetingCard/EnvelopeGreetingCard.js","NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveEnvelopeGreetCard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./EnvelopeGreetingCard.css\";\r\nimport { BrowserView, MobileView, TabletView } from \"react-device-detect\";\r\nexport default function EnvelopeGreetingCard({\r\n  fbimg,\r\n  message,\r\n  occassion,\r\n  totext,\r\n  fromtext,\r\n}) {\r\n  const [mainclass, setmainclass] = useState(\"new\");\r\n  const handlechangeclass = () => {\r\n    if (mainclass === \"new\") {\r\n      setmainclass(\"open\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"envelopecardbody\">\r\n      <div\r\n        onClick={() => {\r\n          handlechangeclass();\r\n        }}\r\n        className={`envelope ${mainclass} `}\r\n      >\r\n        <div class=\"EnvelopeGreetingCardfront\">\r\n          <div class=\"EnvelopeGreetingCardmail\">\r\n            <p>{occassion}</p>\r\n            <p>Click me</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"EnvelopeGreetingCardback\">\r\n          <div\r\n            style={{\r\n              backgroundImage: \"url(\" + fbimg + \")\",\r\n            }}\r\n            class=\"EnvelopeGreetingCardletter\"\r\n          >\r\n            <p> {message} </p>\r\n            <p>{fromtext}</p>\r\n            <p>{totext}</p>\r\n            <div class=\"EnvelopeGreetingCardbox\">\r\n              <div class=\"EnvelopeGreetingCardcake\">\r\n                <div class=\"EnvelopeGreetingCardcandle\">\r\n                  <div class=\"EnvelopeGreetingCardfire\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"EnvelopeGreetingCardflip left-EnvelopeGreetingCardflip\"></div>\r\n          <div class=\"EnvelopeGreetingCardflip right-EnvelopeGreetingCardflip\"></div>\r\n          <div class=\"EnvelopeGreetingCardflip bottom-EnvelopeGreetingCardflip\"></div>\r\n          <div class=\"EnvelopeGreetingCardflip top-EnvelopeGreetingCardflip\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction ScheduledLiveNavBar({ slug }) {\r\n  const { daystep } = useSelector((state) => ({ ...state }));\r\n  const database = firebase.firestore();\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\r\n    const data = await snapshot.data().array_data;\r\n\r\n    data.map((item, index) => {\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a\r\n                  class=\"nav-link js-scroll-trigger\"\r\n                  href={`/scheduledlive/main/${slug}`}\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {dataurl.map((item, index) => {\r\n                if (item != \"\") {\r\n                  if (index == daystep.day - 1) {\r\n                    return (\r\n                      <li class=\"nav-item \">\r\n                        <a\r\n                          class=\"nav-link js-scroll-trigger active\"\r\n                          href={item}\r\n                        >\r\n                          Day {index + 1}\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <li class=\"nav-item \">\r\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\r\n                        Day {index + 1}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveNavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 190,\r\n  strokeWidth: 6,\r\n};\r\nconst timerProps1 = {\r\n  isPlaying: true,\r\n  size: 80,\r\n  strokeWidth: 3,\r\n};\r\nconst timerProps2 = {\r\n  isPlaying: true,\r\n  size: 150,\r\n  strokeWidth: 4,\r\n};\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nexport default function CircleTimer({ Bday }) {\r\n  const [loading, setloading] = useState(false);\r\n  const startTime = 0;\r\n\r\n  const endTime = Bday / 1000;\r\n  console.log(endTime, \"endtime\");\r\n\r\n  const remainingTime = endTime - startTime;\r\n  console.log(remainingTime, \"endtime_remaining\");\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n\r\n  const daysDuration = days * daySeconds;\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setloading(false);\r\n  //   }, 2000);\r\n  // });\r\n\r\n  const mobview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"14px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const tabview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"24px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps2}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const browview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"35px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\r\n      {remainingTime > 0 ? (\r\n        <div>\r\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EnvelopeGreetingCard from \"../EnvelopeGreetingCard/EnvelopeGreetingCard\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nfunction ScheduledLiveEnvelopeGreetCard({ match }) {\r\n  let dispatch = useDispatch();\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [occassion, setoccassion] = useState(\"\");\r\n  const [totext, settotext] = useState(\"\");\r\n  const [fromtext, setfromtext] = useState(\"\");\r\n  const database = firebase.firestore();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"EnvelopeGreetingcard\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/EnvelopeGreetingCard/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n        var msg = snapshot.val().message;\r\n        setmessage(msg);\r\n        var occn = snapshot.val().occassion;\r\n        setoccassion(occn);\r\n        var to_nam = snapshot.val().totext;\r\n        settotext(to_nam);\r\n        var from_nam = snapshot.val().fromtext;\r\n        setfromtext(from_nam);\r\n      });\r\n    setloading(false);\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ flex: \"1\" }}>\r\n          {loading ? (\r\n            <Loader\r\n              type=\"BallTriangle\"\r\n              color=\"#00BFFF\"\r\n              height={100}\r\n              width={100}\r\n            />\r\n          ) : (\r\n            <div>\r\n              {new Date(Livelinks.Bday_date) -\r\n                +new Date() -\r\n                19800000 -\r\n                86400000 * (dataurl.length - today - 1) >\r\n              0 ? (\r\n                <div>\r\n                  <h5 className=\"example\"> This Gift opens in </h5>\r\n                  <CircleTimer\r\n                    Bday={\r\n                      +new Date(Livelinks.Bday_date) -\r\n                      +new Date() -\r\n                      19800000 -\r\n                      86400000 * (dataurl.length - today - 1)\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <center>\r\n                    {\" \"}\r\n                    {dataurl.length - today - 1 == 0 ? (\r\n                      <h1 className=\"example\">The Big day is here !!!</h1>\r\n                    ) : dataurl.length - today - 1 == 1 ? (\r\n                      <h1 className=\"example\">\r\n                        {dataurl.length - today - 1} day to go !!!\r\n                      </h1>\r\n                    ) : (\r\n                      <h1 className=\"example\">\r\n                        {dataurl.length - today - 1} days to go !!!\r\n                      </h1>\r\n                    )}\r\n                  </center>\r\n                  <EnvelopeGreetingCard\r\n                    fbimg={fbimg}\r\n                    message={message}\r\n                    occassion={occassion}\r\n                    totext={totext}\r\n                    fromtext={fromtext}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveEnvelopeGreetCard;\r\n"],"names":["EnvelopeGreetingCard","fbimg","message","occassion","totext","fromtext","useState","mainclass","setmainclass","className","onClick","class","style","backgroundImage","slug","daystep","useSelector","state","database","firebase","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","map","item","index","url","id","href","src","require","alt","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","Math","ceil","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","match","dispatch","useDispatch","setfbimg","setmessage","setoccassion","settotext","setfromtext","Livelinks","setLivelinks","loading","setloading","today","settoday","params","payload","ref","once","then","img","val","msg","occn","to_nam","from_nam","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","flex","color","height","width"],"sourceRoot":""}