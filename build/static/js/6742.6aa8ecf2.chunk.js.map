{"version":3,"file":"static/js/6742.6aa8ecf2.chunk.js","mappings":"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","sources":["MemoryGame/MemoryGame.js","NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveMemoryGame.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./memory.css\";\r\n\r\nconst useInterval = (callback, delay, duration) => {\r\n  const durationRef = useRef(duration);\r\n  const durationIntervalRef = useRef();\r\n\r\n  const handler = () => {\r\n    callback(durationRef);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const durationInterval = setInterval(handler, delay);\r\n    durationIntervalRef.current = durationInterval;\r\n    return () => {\r\n      clearInterval(durationInterval);\r\n    };\r\n  }, [delay]);\r\n\r\n  return durationIntervalRef;\r\n};\r\n\r\nfunction MemoryGame({ fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6 }) {\r\n  const [newGame, setNewGame] = useState(false);\r\n  const [timer, settimer] = useState(0);\r\n  const [isstarted, setisstarted] = useState(false);\r\n  const [list, setList] = useState([\r\n    fbimg1,\r\n    fbimg4,\r\n    fbimg3,\r\n    fbimg4,\r\n    fbimg2,\r\n    fbimg1,\r\n    fbimg3,\r\n    fbimg6,\r\n    fbimg6,\r\n    fbimg5,\r\n    fbimg5,\r\n    fbimg2,\r\n  ]);\r\n  const [visibleItems, setVisibleItems] = useState([]);\r\n  const [duration, setDuration] = useState(0);\r\n  const [finishedItems, setFinishedItems] = useState([]);\r\n  const [winner, setWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setList([\r\n      fbimg1,\r\n      fbimg4,\r\n      fbimg3,\r\n      fbimg4,\r\n      fbimg2,\r\n      fbimg1,\r\n      fbimg3,\r\n      fbimg6,\r\n      fbimg6,\r\n      fbimg5,\r\n      fbimg5,\r\n      fbimg2,\r\n    ]);\r\n  }, [fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6]);\r\n\r\n  const checkItems = (firstIndex, secondIndex) => {\r\n    if (firstIndex !== secondIndex && list[firstIndex] === list[secondIndex]) {\r\n      setFinishedItems([...finishedItems, firstIndex, secondIndex]);\r\n    } else {\r\n      setTimeout(() => {\r\n        setVisibleItems([]);\r\n      }, 600);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(\r\n      list.sort(() => {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  }, [newGame]);\r\n\r\n  const durationIntervalRef = useInterval(\r\n    (durationRef) => {\r\n      durationRef.current++;\r\n      setDuration(durationRef.current);\r\n    },\r\n    1000,\r\n    duration\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (finishedItems.length > 0 && finishedItems.length === list.length) {\r\n      {\r\n        setWinner(true);\r\n      }\r\n\r\n      clearInterval(durationIntervalRef.current);\r\n    }\r\n  }, [finishedItems]);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      settimer(timer + 1);\r\n    }, 1000);\r\n  });\r\n  return (\r\n    <div>\r\n      {/* {timer} */}\r\n      {isstarted ? (\r\n        <div className=\"text-center p-2 d-flex flex-column\">\r\n          {list.length === 0 ? (\r\n            <div>...Loading</div>\r\n          ) : (\r\n            <div>\r\n              <div style={{ padding: \"0\" }} className=\"container\">\r\n                <div className=\"row no-gutters\">\r\n                  {list.map((item, index) => (\r\n                    <div\r\n                      className={`col-3 memcard ${\r\n                        visibleItems.includes(index) ? \"grid-memcard-show\" : \"\"\r\n                      } ${\r\n                        finishedItems.includes(index)\r\n                          ? \"grid-memcard-show grid-memcard-finished\"\r\n                          : \"\"\r\n                      }`}\r\n                      key={item.id}\r\n                      onClick={() => {\r\n                        if (!finishedItems.includes(index)) {\r\n                          switch (visibleItems.length) {\r\n                            case 0:\r\n                              setVisibleItems([index]);\r\n                              break;\r\n                            case 1:\r\n                              if (visibleItems[0] !== index) {\r\n                                setVisibleItems(visibleItems.concat(index));\r\n                                checkItems(visibleItems[0], index);\r\n                              }\r\n                              break;\r\n                            case 2:\r\n                              setVisibleItems([index]);\r\n                              break;\r\n                            default:\r\n                              setVisibleItems([]);\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className={`img-thumbnail img-fluid grid-img`}\r\n                        src={item}\r\n                        alt={item.description}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {winner && (\r\n                <div>\r\n                  You Win !\r\n                  <br />\r\n                  {/* Finished in {duration} seconds */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <br />\r\n          <div style={{ width: \"auto\" }}>\r\n            <button\r\n              style={{ width: \"fit-content\" }}\r\n              className=\"main-button\"\r\n              onClick={() => {\r\n                setNewGame(!newGame);\r\n                setVisibleItems([]);\r\n                setFinishedItems([]);\r\n                setWinner(false);\r\n              }}\r\n            >\r\n              New Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2\"></div>{\" \"}\r\n              <div className=\"col-lg-8\">\r\n                <h6 style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                  Greetings of the day and wish you many more! Welcome to a fun\r\n                  game challenging your wits and hoping to put up a big wide\r\n                  smile on your special day.\r\n                </h6>{\" \"}\r\n                <br />\r\n                <h5 style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                  Instructions -\r\n                </h5>\r\n                <ol>\r\n                  <li>\r\n                    <p style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                      {\" \"}\r\n                      There are 6 pictures behind these 12 tiles and finish this\r\n                      game by matching the two tiles of the same picture\r\n                      together\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                      At a given time only 2 tiles will be shown, so familiarise\r\n                      yourself with where each picture is and finish the game to\r\n                      beat your own personal best!\r\n                    </p>\r\n                  </li>\r\n                </ol>\r\n                <br />\r\n                <center>\r\n                  <button\r\n                    className=\"main-button\"\r\n                    onClick={() => {\r\n                      setisstarted(true);\r\n                      settimer(0);\r\n                    }}\r\n                  >\r\n                    Start game\r\n                  </button>\r\n                </center>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction ScheduledLiveNavBar({ slug }) {\r\n  const { daystep } = useSelector((state) => ({ ...state }));\r\n  const database = firebase.firestore();\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\r\n    const data = await snapshot.data().array_data;\r\n\r\n    data.map((item, index) => {\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a\r\n                  class=\"nav-link js-scroll-trigger\"\r\n                  href={`/scheduledlive/main/${slug}`}\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {dataurl.map((item, index) => {\r\n                if (item != \"\") {\r\n                  if (index == daystep.day - 1) {\r\n                    return (\r\n                      <li class=\"nav-item \">\r\n                        <a\r\n                          class=\"nav-link js-scroll-trigger active\"\r\n                          href={item}\r\n                        >\r\n                          Day {index + 1}\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <li class=\"nav-item \">\r\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\r\n                        Day {index + 1}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveNavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 190,\r\n  strokeWidth: 6,\r\n};\r\nconst timerProps1 = {\r\n  isPlaying: true,\r\n  size: 80,\r\n  strokeWidth: 3,\r\n};\r\nconst timerProps2 = {\r\n  isPlaying: true,\r\n  size: 150,\r\n  strokeWidth: 4,\r\n};\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nexport default function CircleTimer({ Bday }) {\r\n  const [loading, setloading] = useState(false);\r\n  const startTime = 0;\r\n\r\n  const endTime = Bday / 1000;\r\n  console.log(endTime, \"endtime\");\r\n\r\n  const remainingTime = endTime - startTime;\r\n  console.log(remainingTime, \"endtime_remaining\");\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n\r\n  const daysDuration = days * daySeconds;\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setloading(false);\r\n  //   }, 2000);\r\n  // });\r\n\r\n  const mobview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"14px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const tabview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"24px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps2}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const browview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"35px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\r\n      {remainingTime > 0 ? (\r\n        <div>\r\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MemoryGame from \"../MemoryGame/MemoryGame\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nexport default function ScheduledLiveMemoryGame({ match }) {\r\n  const database = firebase.firestore();\r\n  let dispatch = useDispatch();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [fbimg1, setfbimg1] = useState(\"\");\r\n  const [fbimg2, setfbimg2] = useState(\"\");\r\n  const [fbimg3, setfbimg3] = useState(\"\");\r\n  const [fbimg4, setfbimg4] = useState(\"\");\r\n  const [fbimg5, setfbimg5] = useState(\"\");\r\n  const [fbimg6, setfbimg6] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  const [nscore, setnscore] = useState(0);\r\n  const [bestscore, setbestscore] = useState(\"\");\r\n  const handleFireBaseScoreUpload = (n) => {\r\n    const todoRef = firebase.database().ref(\"MemoryGame/\" + match.params.id);\r\n    const todo = {\r\n      score: n,\r\n    };\r\n    todoRef.update(todo);\r\n  };\r\n  const setnewscore = async (e) => {\r\n    setnscore(e);\r\n    if (nscore < bestscore) {\r\n      alert(\"you scored better than your previous one! keep playing\");\r\n      setbestscore(nscore);\r\n      handleFireBaseScoreUpload(e);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"memorygame\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/MemoryGame/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img1 = snapshot.val().url1;\r\n        setfbimg1(img1);\r\n        var img2 = snapshot.val().url2;\r\n        setfbimg2(img2);\r\n        var img3 = snapshot.val().url3;\r\n        setfbimg3(img3);\r\n        var img4 = snapshot.val().url4;\r\n        setfbimg4(img4);\r\n        var img5 = snapshot.val().url5;\r\n        setfbimg5(img5);\r\n        var img6 = snapshot.val().url6;\r\n        setfbimg6(img6);\r\n        var scr = snapshot.val().score;\r\n        setbestscore(scr);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    // console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ backgroundColor: \"#70cff3\" }} class=\"container-fluid pt-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-1 \"></div>\r\n          <div class=\"col-sm-10 mb-3\">\r\n            {loading ? (\r\n              <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <div>\r\n                {new Date(Livelinks.Bday_date) -\r\n                  +new Date() -\r\n                  19800000 -\r\n                  86400000 * (dataurl.length - today - 1) >\r\n                0 ? (\r\n                  <div>\r\n                    <h5 className=\"example\"> This Gift opens in </h5>\r\n                    <CircleTimer\r\n                      Bday={\r\n                        +new Date(Livelinks.Bday_date) -\r\n                        +new Date() -\r\n                        19800000 -\r\n                        86400000 * (dataurl.length - today - 1)\r\n                      }\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <center>\r\n                      {\" \"}\r\n                      {dataurl.length - today - 1 == 0 ? (\r\n                        <h1 className=\"example\">The Big day is here !!!</h1>\r\n                      ) : dataurl.length - today - 1 == 1 ? (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} day to go !!!\r\n                        </h1>\r\n                      ) : (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} days to go !!!\r\n                        </h1>\r\n                      )}\r\n                    </center>\r\n                    <MemoryGame\r\n                      fbimg1={fbimg1}\r\n                      fbimg2={fbimg2}\r\n                      fbimg3={fbimg3}\r\n                      fbimg4={fbimg4}\r\n                      fbimg5={fbimg5}\r\n                      fbimg6={fbimg6}\r\n                      setnewscore={setnewscore}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>{\" \"}\r\n          <div class=\"col-sm-1 \"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["fbimg1","fbimg2","fbimg3","fbimg4","fbimg5","fbimg6","useState","newGame","setNewGame","timer","settimer","isstarted","setisstarted","list","setList","visibleItems","setVisibleItems","duration","setDuration","finishedItems","setFinishedItems","winner","setWinner","useEffect","sort","Math","random","durationIntervalRef","callback","delay","durationRef","useRef","handler","durationInterval","setInterval","current","clearInterval","useInterval","length","setTimeout","className","style","padding","map","item","index","includes","key","id","onClick","concat","firstIndex","secondIndex","src","alt","description","width","color","textAlign","slug","daystep","useSelector","state","database","firebase","dataurl","navstate","setnavstate","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","url","class","href","require","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","ceil","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","CountdownCircleTimer","colors","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","ScheduledLiveMemoryGame","match","dispatch","useDispatch","Livelinks","setLivelinks","setfbimg1","setfbimg2","setfbimg3","setfbimg4","setfbimg5","setfbimg6","loading","setloading","today","settoday","nscore","setnscore","bestscore","setbestscore","handleFireBaseScoreUpload","n","todo","score","ref","params","update","setnewscore","e","alert","payload","once","then","img1","val","url1","img2","url2","img3","url3","img4","url4","img5","url5","img6","url6","scr","calculateTimeLeft","Date","getFullYear","difference","Bday_date","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","timerComponents","Object","keys","forEach","interval","push","backgroundColor","height","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}