{"version":3,"file":"static/js/4461.d6ebe447.chunk.js","mappings":"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","sources":["NavBars/ScheduledLiveNavBar.js","OpenGreetingCard/OpenGreetingCard.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveOpenGreetCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport { useSelector } from \"react-redux\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction ScheduledLiveNavBar({ slug }) {\n  const { daystep } = useSelector((state) => ({ ...state }));\n  const database = firebase.firestore();\n  const [dataurl, setdataurl] = useState([]);\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  async function getDoc() {\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\n    const data = await snapshot.data().array_data;\n\n    data.map((item, index) => {\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(async () => {\n    await getDoc();\n  }, []);\n\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link js-scroll-trigger\"\n                  href={`/scheduledlive/main/${slug}`}\n                >\n                  Home\n                </a>\n              </li>\n              {dataurl.map((item, index) => {\n                if (item != \"\") {\n                  if (index == daystep.day - 1) {\n                    return (\n                      <li class=\"nav-item \">\n                        <a\n                          class=\"nav-link js-scroll-trigger active\"\n                          href={item}\n                        >\n                          Day {index + 1}\n                        </a>\n                      </li>\n                    );\n                  }\n                  return (\n                    <li class=\"nav-item \">\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\n                        Day {index + 1}\n                      </a>\n                    </li>\n                  );\n                }\n              })}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default ScheduledLiveNavBar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./OpenGreetingCard.css\";\nimport { BrowserView, MobileView, TabletView } from \"react-device-detect\";\nexport default function OpenGreetingCard({\n  fbimg,\n  message,\n  occassion,\n  totext,\n  fromtext,\n  location,\n}) {\n  const [openCard, setOpenCard] = useState(\"gc_carrd \");\n\n  const timer = () => {\n    setTimeout(() => {\n      setOpenCard(\"gc_carrd open\");\n      setTimeout(() => {\n        setOpenCard(\"gc_carrd\");\n        timer();\n      }, 15000);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    timer();\n  });\n\n  return (\n    <div className=\"opengreetingcardmaindiv\">\n      <div className=\"gc_mainCard\">\n        <section class=\"gc_containerr\">\n          <div className={openCard} id=\"theCard\">\n            <div class=\"gc_page gc_back\">\n              <div class=\"side gc_back\">Jobbies</div>\n              <div class=\"side gc_front\">\n                <div class=\"gc_hearts\">\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                  <div class=\"gc_heart\"></div>\n                </div>\n                <div style={{ overflow: \"hidden\" }}>\n                  <p>{message}</p>\n                  <p> {occassion}</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"gc_page gc_front\">\n              <div\n                style={{\n                  backgroundImage: \"url(\" + fbimg + \")\",\n                  opacity: \"0.9\",\n                  backgroundSize: \"cover\",\n                  backgroundRepeat: \"no-repeat\",\n                  overflow: \"hidden\",\n                  boxShadow: \"0px 0px 0px 15px #dfccaf inset\",\n                }}\n                class=\"side gc_back red\"\n              >\n                <div class=\"gc_hearts\">\n                  {\" \"}\n                  <BrowserView>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>{\" \"}\n                  </BrowserView>\n                  <TabletView>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>\n                    <div class=\"gc_heart\"></div>{\" \"}\n                  </TabletView>\n                </div>{\" \"}\n              </div>\n              <div style={{ overflow: \"hidden\" }} class=\"side gc_front\">\n                <div>\n                  <p>\n                    To <br /> <span class=\"red\"> {totext}</span>\n                  </p>\n                  <p>\n                    From <br /> <span class=\"blue\">{fromtext}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Loader from \"react-loader-spinner\";\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 190,\n  strokeWidth: 6,\n};\nconst timerProps1 = {\n  isPlaying: true,\n  size: 80,\n  strokeWidth: 3,\n};\nconst timerProps2 = {\n  isPlaying: true,\n  size: 150,\n  strokeWidth: 4,\n};\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\nconst getTimeDays = (time) => (time / daySeconds) | 0;\n\nexport default function CircleTimer({ Bday }) {\n  const [loading, setloading] = useState(false);\n  const startTime = 0;\n\n  const endTime = Bday / 1000;\n  console.log(endTime, \"endtime\");\n\n  const remainingTime = endTime - startTime;\n  console.log(remainingTime, \"endtime_remaining\");\n  const days = Math.ceil(remainingTime / daySeconds);\n\n  const daysDuration = days * daySeconds;\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setloading(false);\n  //   }, 2000);\n  // });\n\n  const mobview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"14px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const tabview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"24px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps2}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const browview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"35px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  return (\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\n      {remainingTime > 0 ? (\n        <div>\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport OpenGreetingCard from \"../OpenGreetingCard/OpenGreetingCard\";\nimport firebase from \"../firebase\";\nimport Loader from \"react-loader-spinner\";\nimport CircleTimer from \"./CircleTimer\";\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\nfunction ScheduledLiveOpenGreetCard({ match }) {\n  let dispatch = useDispatch();\n  const [fbimg, setfbimg] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [occassion, setoccassion] = useState(\"\");\n  const [totext, settotext] = useState(\"\");\n  const [fromtext, setfromtext] = useState(\"\");\n  const database = firebase.firestore();\n  const [Livelinks, setLivelinks] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [dataurl, setdataurl] = useState([]);\n  const [today, settoday] = useState();\n  async function getDoc() {\n    const snapshot = await database\n      .collection(\"Livelinks\")\n      .doc(match.params.slug)\n      .get();\n    const data = snapshot.data();\n    setLivelinks(data);\n    data.array_data.map((item, index) => {\n      if (item.id == \"greetingcard\") {\n        settoday(index);\n        dispatch({\n          type: \"ACTIVE_STEP\",\n          payload: { day: index + 1 },\n        });\n      }\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(() => {\n    getDoc();\n    console.log(Livelinks, \"liveData\");\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\n  }, []);\n  useEffect(() => {\n    setloading(true);\n    const todoRef = firebase\n      .database()\n      .ref(\"/OpenGreetingCard/\" + match.params.id)\n      .once(\"value\")\n      .then((snapshot) => {\n        var img = snapshot.val().url;\n        setfbimg(img);\n        var msg = snapshot.val().message;\n        setmessage(msg);\n        var occn = snapshot.val().occassion;\n        setoccassion(occn);\n        var to_nam = snapshot.val().totext;\n        settotext(to_nam);\n        var from_nam = snapshot.val().fromtext;\n        setfromtext(from_nam);\n      });\n    setloading(false);\n  }, []);\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    var difference =\n      +new Date(Livelinks.Bday_date) -\n      +new Date() -\n      19800000 -\n      86400000 * (dataurl.length - today);\n    console.log(difference, \"difference\");\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div>\n      <ScheduledLiveNavBar slug={match.params.slug} />\n      <br />\n      <br />\n      <br />\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"1\" }}>\n          {loading ? (\n            <Loader\n              type=\"BallTriangle\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n            />\n          ) : (\n            <div>\n              {new Date(Livelinks.Bday_date) -\n                +new Date() -\n                19800000 -\n                86400000 * (dataurl.length - today - 1) >\n              0 ? (\n                <div>\n                  <h5 className=\"example\"> This Gift opens in </h5>\n                  <CircleTimer\n                    Bday={\n                      +new Date(Livelinks.Bday_date) -\n                      +new Date() -\n                      19800000 -\n                      86400000 * (dataurl.length - today - 1)\n                    }\n                  />\n                </div>\n              ) : (\n                <div>\n                  <center>\n                    {\" \"}\n                    {dataurl.length - today - 1 == 0 ? (\n                      <h1 className=\"example\">The Big day is here !!!</h1>\n                    ) : dataurl.length - today - 1 == 1 ? (\n                      <h1 className=\"example\">\n                        {dataurl.length - today - 1} day to go !!!\n                      </h1>\n                    ) : (\n                      <h1 className=\"example\">\n                        {dataurl.length - today - 1} days to go !!!\n                      </h1>\n                    )}\n                  </center>\n                  <OpenGreetingCard\n                    fbimg={fbimg}\n                    message={message}\n                    occassion={occassion}\n                    totext={totext}\n                    fromtext={fromtext}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduledLiveOpenGreetCard;\n"],"names":["slug","daystep","useSelector","state","database","firebase","useState","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","map","item","index","url","class","id","href","src","require","alt","type","day","OpenGreetingCard","fbimg","message","occassion","totext","fromtext","location","openCard","setOpenCard","timer","setTimeout","className","style","overflow","backgroundImage","opacity","backgroundSize","backgroundRepeat","boxShadow","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","Math","ceil","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","match","dispatch","useDispatch","setfbimg","setmessage","setoccassion","settotext","setfromtext","Livelinks","setLivelinks","loading","setloading","today","settoday","params","payload","ref","once","then","img","val","msg","occn","to_nam","from_nam","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","timerComponents","Object","keys","forEach","interval","push","flex","color","height","width"],"sourceRoot":""}