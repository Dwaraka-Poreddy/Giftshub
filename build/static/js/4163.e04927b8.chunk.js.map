{"version":3,"file":"static/js/4163.e04927b8.chunk.js","mappings":"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","sources":["EnvelopeGreetingCard/EnvelopeGreetingCard.js","LivePages/LiveEnvelopeGreetingCard.js","NavBars/LiveNavBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./EnvelopeGreetingCard.css\";\nimport { BrowserView, MobileView, TabletView } from \"react-device-detect\";\nexport default function EnvelopeGreetingCard({\n  fbimg,\n  message,\n  occassion,\n  totext,\n  fromtext,\n}) {\n  const [mainclass, setmainclass] = useState(\"new\");\n  const handlechangeclass = () => {\n    if (mainclass === \"new\") {\n      setmainclass(\"open\");\n    }\n  };\n  return (\n    <div className=\"envelopecardbody\">\n      <div\n        onClick={() => {\n          handlechangeclass();\n        }}\n        className={`envelope ${mainclass} `}\n      >\n        <div class=\"EnvelopeGreetingCardfront\">\n          <div class=\"EnvelopeGreetingCardmail\">\n            <p>{occassion}</p>\n            <p>Click me</p>\n          </div>\n        </div>\n        <div class=\"EnvelopeGreetingCardback\">\n          <div\n            style={{\n              backgroundImage: \"url(\" + fbimg + \")\",\n            }}\n            class=\"EnvelopeGreetingCardletter\"\n          >\n            <p> {message} </p>\n            <p>{fromtext}</p>\n            <p>{totext}</p>\n            <div class=\"EnvelopeGreetingCardbox\">\n              <div class=\"EnvelopeGreetingCardcake\">\n                <div class=\"EnvelopeGreetingCardcandle\">\n                  <div class=\"EnvelopeGreetingCardfire\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"EnvelopeGreetingCardflip left-EnvelopeGreetingCardflip\"></div>\n          <div class=\"EnvelopeGreetingCardflip right-EnvelopeGreetingCardflip\"></div>\n          <div class=\"EnvelopeGreetingCardflip bottom-EnvelopeGreetingCardflip\"></div>\n          <div class=\"EnvelopeGreetingCardflip top-EnvelopeGreetingCardflip\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport EnvelopeGreetingCard from \"../EnvelopeGreetingCard/EnvelopeGreetingCard\";\nimport firebase from \"../firebase\";\nimport Loader from \"react-loader-spinner\";\nimport LiveNavBar from \"../NavBars/LiveNavBar\";\nfunction LiveEnvelopeGreetingCard({ match }) {\n  const [fbimg, setfbimg] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [occassion, setoccassion] = useState(\"\");\n  const [totext, settotext] = useState(\"\");\n  const [fromtext, setfromtext] = useState(\"\");\n  const [loading, setloading] = useState(false);\n\n  useEffect(async () => {\n    setloading(true);\n    const todoRef = await firebase\n      .database()\n      .ref(\"/EnvelopeGreetingCard/\" + match.params.slug)\n      .once(\"value\")\n      .then((snapshot) => {\n        var img = snapshot.val().url;\n        setfbimg(img);\n\n        var msg = snapshot.val().message;\n        setmessage(msg);\n        var occn = snapshot.val().occassion;\n        setoccassion(occn);\n        var to_nam = snapshot.val().totext;\n        settotext(to_nam);\n        var from_nam = snapshot.val().fromtext;\n        setfromtext(from_nam);\n      });\n    setloading(false);\n  }, []);\n\n  return (\n    <div>\n      <LiveNavBar />\n      <br />\n      <br />\n      <br />\n      <br />\n      {loading ? (\n        <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={100} width={100} />\n      ) : (\n        <EnvelopeGreetingCard\n          fbimg={fbimg}\n          message={message}\n          occassion={occassion}\n          totext={totext}\n          fromtext={fromtext}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LiveEnvelopeGreetingCard;\n","import React, { useState, useEffect } from \"react\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nexport default function LiveNavBar() {\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href={`/aboutus`}>\n                  ABOUT\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n"],"names":["EnvelopeGreetingCard","fbimg","message","occassion","totext","fromtext","useState","mainclass","setmainclass","className","onClick","class","style","backgroundImage","match","setfbimg","setmessage","setoccassion","settotext","setfromtext","loading","setloading","useEffect","firebase","ref","params","slug","once","then","snapshot","img","val","url","msg","occn","to_nam","from_nam","type","color","height","width","LiveNavBar","navstate","setnavstate","window","addEventListener","changeBackground","scrollY","id","href","src","require","alt"],"sourceRoot":""}