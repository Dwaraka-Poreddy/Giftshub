{"version":3,"file":"static/js/7716.a6d1e51f.chunk.js","mappings":"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","sources":["HoneyComb/HoneyComb.js","NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveHoneyComb.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./HoneyComb.css\";\r\n\r\nexport default function HoneyComb({\r\n  fbimg1,\r\n  fbimg2,\r\n  fbimg3,\r\n  fbimg4,\r\n  fbimg5,\r\n  fbimg6,\r\n  t1,\r\n  t2,\r\n  t3,\r\n  t4,\r\n  t5,\r\n  t6,\r\n}) {\r\n  return (\r\n    <body className=\"hexagonalAnimation\" translate=\"no\">\r\n      <base target=\"_blank\" />\r\n      <ul className=\"hexagonalAnimationul\">\r\n        <li className=\"hexagonalAnimationli\">\r\n          <img alt=\"1\" className=\"hexagonalAnimationimg\" src={fbimg1} />\r\n        </li>\r\n        <li className=\"hexagonalAnimationli\">\r\n          <img alt=\"1\" className=\"hexagonalAnimationimg\" src={fbimg2} />\r\n        </li>\r\n        <li className=\"hexagonalAnimationli\">\r\n          <img alt=\"1\" className=\"hexagonalAnimationimg\" src={fbimg3} />\r\n        </li>\r\n        <li className=\"hexagonalAnimationli\">\r\n          <img alt=\"1\" className=\"hexagonalAnimationimg\" src={fbimg4} />\r\n        </li>\r\n        <li className=\"hexagonalAnimationli\">\r\n          <img alt=\"1\" className=\"hexagonalAnimationimg\" src={fbimg5} />\r\n        </li>\r\n        <li className=\"hexagonalAnimationli\">\r\n          <img alt=\"1\" className=\"hexagonalAnimationimg\" src={fbimg6} />\r\n        </li>\r\n      </ul>\r\n    </body>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction ScheduledLiveNavBar({ slug }) {\r\n  const { daystep } = useSelector((state) => ({ ...state }));\r\n  const database = firebase.firestore();\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\r\n    const data = await snapshot.data().array_data;\r\n\r\n    data.map((item, index) => {\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a\r\n                  class=\"nav-link js-scroll-trigger\"\r\n                  href={`/scheduledlive/main/${slug}`}\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {dataurl.map((item, index) => {\r\n                if (item != \"\") {\r\n                  if (index == daystep.day - 1) {\r\n                    return (\r\n                      <li class=\"nav-item \">\r\n                        <a\r\n                          class=\"nav-link js-scroll-trigger active\"\r\n                          href={item}\r\n                        >\r\n                          Day {index + 1}\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <li class=\"nav-item \">\r\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\r\n                        Day {index + 1}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveNavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 190,\r\n  strokeWidth: 6,\r\n};\r\nconst timerProps1 = {\r\n  isPlaying: true,\r\n  size: 80,\r\n  strokeWidth: 3,\r\n};\r\nconst timerProps2 = {\r\n  isPlaying: true,\r\n  size: 150,\r\n  strokeWidth: 4,\r\n};\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nexport default function CircleTimer({ Bday }) {\r\n  const [loading, setloading] = useState(false);\r\n  const startTime = 0;\r\n\r\n  const endTime = Bday / 1000;\r\n  console.log(endTime, \"endtime\");\r\n\r\n  const remainingTime = endTime - startTime;\r\n  console.log(remainingTime, \"endtime_remaining\");\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n\r\n  const daysDuration = days * daySeconds;\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setloading(false);\r\n  //   }, 2000);\r\n  // });\r\n\r\n  const mobview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"14px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const tabview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"24px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps2}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const browview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"35px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\r\n      {remainingTime > 0 ? (\r\n        <div>\r\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport HoneyComb from \"../HoneyComb/HoneyComb\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport firebase from \"../firebase\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nexport default function ScheduledLiveHoneyComb({ match }) {\r\n  let dispatch = useDispatch();\r\n  const database = firebase.firestore();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [fbimg1, setfbimg1] = useState(\"\");\r\n  const [fbimg2, setfbimg2] = useState(\"\");\r\n  const [fbimg3, setfbimg3] = useState(\"\");\r\n  const [fbimg4, setfbimg4] = useState(\"\");\r\n  const [fbimg5, setfbimg5] = useState(\"\");\r\n  const [fbimg6, setfbimg6] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"honeycomb\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/HoneyComb/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img1 = snapshot.val().url1;\r\n        setfbimg1(img1);\r\n        var img2 = snapshot.val().url2;\r\n        setfbimg2(img2);\r\n        var img3 = snapshot.val().url3;\r\n        setfbimg3(img3);\r\n        var img4 = snapshot.val().url4;\r\n        setfbimg4(img4);\r\n        var img5 = snapshot.val().url5;\r\n        setfbimg5(img5);\r\n        var img6 = snapshot.val().url6;\r\n        setfbimg6(img6);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\", height: \"100vh\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} /> <br />\r\n      <br />\r\n      <br />\r\n      <div>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"BallTriangle\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <div>\r\n            {new Date(Livelinks.Bday_date) -\r\n              +new Date() -\r\n              19800000 -\r\n              86400000 * (dataurl.length - today - 1) >\r\n            0 ? (\r\n              <div>\r\n                <h5 className=\"example\"> This Gift opens in </h5>\r\n                <CircleTimer\r\n                  Bday={\r\n                    +new Date(Livelinks.Bday_date) -\r\n                    +new Date() -\r\n                    19800000 -\r\n                    86400000 * (dataurl.length - today - 1)\r\n                  }\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <center>\r\n                  {\" \"}\r\n                  {dataurl.length - today - 1 == 0 ? (\r\n                    <h1 className=\"example\">The Big day is here !!!</h1>\r\n                  ) : dataurl.length - today - 1 == 1 ? (\r\n                    <h1 className=\"example\">\r\n                      {dataurl.length - today - 1} day to go !!!\r\n                    </h1>\r\n                  ) : (\r\n                    <h1 className=\"example\">\r\n                      {dataurl.length - today - 1} days to go !!!\r\n                    </h1>\r\n                  )}\r\n                </center>\r\n                <HoneyComb\r\n                  fbimg1={fbimg1}\r\n                  fbimg2={fbimg2}\r\n                  fbimg3={fbimg3}\r\n                  fbimg4={fbimg4}\r\n                  fbimg5={fbimg5}\r\n                  fbimg6={fbimg6}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["HoneyComb","fbimg1","fbimg2","fbimg3","fbimg4","fbimg5","fbimg6","t1","t2","t3","t4","t5","t6","className","translate","target","alt","src","slug","daystep","useSelector","state","database","firebase","useState","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","map","item","index","url","class","id","href","require","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","Math","ceil","style","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","ScheduledLiveHoneyComb","match","dispatch","useDispatch","Livelinks","setLivelinks","setfbimg1","setfbimg2","setfbimg3","setfbimg4","setfbimg5","setfbimg6","loading","setloading","today","settoday","params","payload","ref","once","then","img1","val","url1","img2","url2","img3","url3","img4","url4","img5","url5","img6","url6","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","backgroundColor","height","color","width"],"sourceRoot":""}