{"version":3,"file":"static/js/7257.f88b3c2a.chunk.js","mappings":"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","sources":["Magazine/Magazine.js","NavBars/ScheduledLiveNavBar.js","ScheduledLivePages/CircleTimer.js","ScheduledLivePages/ScheduledLiveMagazine.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Magazine.css\";\nexport default function App({ text, name, fbimg, BDate }) {\n  var today = new Date();\n  var date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  return (\n    <div>\n      <div>\n        <center>\n          <div\n            className=\"magazineMaindiv\"\n            style={{\n              backgroundImage: \"url(\" + fbimg + \")\",\n            }}\n          >\n            <div style={{ textAlign: \"right\" }}>\n              {\" \"}\n              <p className=\"magazineDate\">\n                {new Date(BDate).toLocaleDateString(\"en-US\")}\n              </p>\n            </div>\n\n            <img\n              style={{ width: \"85%\", marginTop: \"2%\" }}\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Time_Magazine_logo.svg/1280px-Time_Magazine_logo.svg.png\"\n              alt=\"time\"\n            />\n\n            <div\n              style={{\n                marginLeft: \"2%\",\n                marginRight: \"2%\",\n                marginTop: \"20%\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div\n                style={{\n                  float: \"left\",\n                  textAlign: \"left\",\n                  width: \"45%\",\n                  overflow: \"hidden\",\n                }}\n              >\n                <h1\n                  className=\"magazineText\"\n                  style={{ borderBottom: \"0\", paddingBottom: \"0\" }}\n                >\n                  THE\n                </h1>\n                <h1 className=\"magazineText\">{text}</h1>\n                <h1 className=\"magazineName\">{name}</h1>\n              </div>\n              <div style={{ float: \"right\", textAlign: \"right\" }}>\n                <h1 className=\"magazineHot\">HOT</h1>\n                <h1 className=\"magazineBuzz\">BUZZ</h1>\n                <img\n                  className=\"magazineBarcode\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/UPC-A-036000291452.svg/1200px-UPC-A-036000291452.svg.png\"\n                  alt=\"time\"\n                />\n              </div>\n            </div>\n          </div>\n        </center>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport { useSelector } from \"react-redux\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction ScheduledLiveNavBar({ slug }) {\n  const { daystep } = useSelector((state) => ({ ...state }));\n  const database = firebase.firestore();\n  const [dataurl, setdataurl] = useState([]);\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  async function getDoc() {\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\n    const data = await snapshot.data().array_data;\n\n    data.map((item, index) => {\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(async () => {\n    await getDoc();\n  }, []);\n\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link js-scroll-trigger\"\n                  href={`/scheduledlive/main/${slug}`}\n                >\n                  Home\n                </a>\n              </li>\n              {dataurl.map((item, index) => {\n                if (item != \"\") {\n                  if (index == daystep.day - 1) {\n                    return (\n                      <li class=\"nav-item \">\n                        <a\n                          class=\"nav-link js-scroll-trigger active\"\n                          href={item}\n                        >\n                          Day {index + 1}\n                        </a>\n                      </li>\n                    );\n                  }\n                  return (\n                    <li class=\"nav-item \">\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\n                        Day {index + 1}\n                      </a>\n                    </li>\n                  );\n                }\n              })}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default ScheduledLiveNavBar;\n","import React, { useState, useEffect } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Loader from \"react-loader-spinner\";\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\n\nconst timerProps = {\n  isPlaying: true,\n  size: 190,\n  strokeWidth: 6,\n};\nconst timerProps1 = {\n  isPlaying: true,\n  size: 80,\n  strokeWidth: 3,\n};\nconst timerProps2 = {\n  isPlaying: true,\n  size: 150,\n  strokeWidth: 4,\n};\nconst renderTime = (dimension, time) => {\n  return (\n    <div className=\"time-wrapper\">\n      <div className=\"time\">{time}</div>\n      <div>{dimension}</div>\n    </div>\n  );\n};\n\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\nconst getTimeDays = (time) => (time / daySeconds) | 0;\n\nexport default function CircleTimer({ Bday }) {\n  const [loading, setloading] = useState(false);\n  const startTime = 0;\n\n  const endTime = Bday / 1000;\n  console.log(endTime, \"endtime\");\n\n  const remainingTime = endTime - startTime;\n  console.log(remainingTime, \"endtime_remaining\");\n  const days = Math.ceil(remainingTime / daySeconds);\n\n  const daysDuration = days * daySeconds;\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setloading(false);\n  //   }, 2000);\n  // });\n\n  const mobview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"14px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps1}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const tabview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"24px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps2}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  const browview = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          fontSize: \"35px\",\n        }}\n      >\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#7E2E84\"]]}\n          duration={daysDuration}\n          initialRemainingTime={remainingTime}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#00b4c6\"]]}\n          duration={daySeconds}\n          initialRemainingTime={remainingTime % daySeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > hourSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#fc9700\"]]}\n          duration={hourSeconds}\n          initialRemainingTime={remainingTime % hourSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > minuteSeconds,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\n              \"minutes\",\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\n            )\n          }\n        </CountdownCircleTimer>\n        <CountdownCircleTimer\n          {...timerProps}\n          colors={[[\"#218380\"]]}\n          duration={minuteSeconds}\n          initialRemainingTime={remainingTime % minuteSeconds}\n          onComplete={(totalElapsedTime) => [\n            remainingTime - totalElapsedTime > 0,\n          ]}\n        >\n          {({ elapsedTime }) =>\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }\n        </CountdownCircleTimer>\n      </div>\n    );\n  };\n  return (\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\n      {remainingTime > 0 ? (\n        <div>\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Magazine from \"../Magazine/Magazine\";\nimport firebase from \"../firebase\";\nimport Loader from \"react-loader-spinner\";\n\nimport CircleTimer from \"./CircleTimer\";\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\nfunction ScheduledLiveMagazine({ match }) {\n  let dispatch = useDispatch();\n  const database = firebase.firestore();\n  const [fbimg, setfbimg] = useState(\"\");\n  const [text, settext] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [Livelinks, setLivelinks] = useState(\"\");\n  const [loading, setloading] = useState(true);\n  const [dataurl, setdataurl] = useState([]);\n  const [today, settoday] = useState();\n\n  async function getDoc() {\n    const snapshot = await database\n      .collection(\"Livelinks\")\n      .doc(match.params.slug)\n      .get();\n\n    const data = snapshot.data();\n    setLivelinks(data);\n    data.array_data.map((item, index) => {\n      if (item.id == \"magazine\") {\n        settoday(index);\n        dispatch({\n          type: \"ACTIVE_STEP\",\n          payload: { day: index + 1 },\n        });\n      }\n      dataurl[index] = item.url;\n    });\n  }\n  useEffect(() => {\n    getDoc();\n    console.log(Livelinks, \"liveData\");\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\n  }, []);\n  useEffect(() => {\n    setloading(true);\n    const todoRef = firebase\n      .database()\n      .ref(\"/Magazine/\" + match.params.id)\n      .once(\"value\")\n      .then((snapshot) => {\n        var img = snapshot.val().url;\n        setfbimg(img);\n        var text = snapshot.val().text;\n        settext(text);\n        var name = snapshot.val().name;\n        setname(name);\n      });\n    setloading(false);\n  }, []);\n\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    var difference =\n      +new Date(Livelinks.Bday_date) -\n      +new Date() -\n      19800000 -\n      86400000 * (dataurl.length - today);\n    console.log(difference, \"difference\");\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <span>\n        {timeLeft[interval]} {interval}{\" \"}\n      </span>\n    );\n  });\n\n  return (\n    <div>\n      <ScheduledLiveNavBar slug={match.params.slug} />\n      <br />\n      <br />\n      <br />\n      <div style={{ backgroundColor: \"#70cff3\" }} class=\"container-fluid pt-2\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 \">\n            {loading ? (\n              <Loader\n                type=\"BallTriangle\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n              />\n            ) : (\n              <div>\n                {new Date(Livelinks.Bday_date) -\n                  +new Date() -\n                  19800000 -\n                  86400000 * (dataurl.length - today - 1) >\n                0 ? (\n                  <div>\n                    <h5 className=\"example\"> This Gift opens in </h5>\n                    <CircleTimer\n                      Bday={\n                        +new Date(Livelinks.Bday_date) -\n                        +new Date() -\n                        19800000 -\n                        86400000 * (dataurl.length - today - 1)\n                      }\n                    />\n                  </div>\n                ) : (\n                  <div className=\"mb-5\">\n                    <center>\n                      {\" \"}\n                      {dataurl.length - today - 1 == 0 ? (\n                        <h1 className=\"example\">The Big day is here !!!</h1>\n                      ) : dataurl.length - today - 1 == 1 ? (\n                        <h1 className=\"example\">\n                          {dataurl.length - today - 1} day to go !!!\n                        </h1>\n                      ) : (\n                        <h1 className=\"example\">\n                          {dataurl.length - today - 1} days to go !!!\n                        </h1>\n                      )}\n                    </center>\n                    <Magazine\n                      fbimg={fbimg}\n                      text={text}\n                      name={name}\n                      //   startDate={BDate}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduledLiveMagazine;\n"],"names":["App","text","name","fbimg","BDate","today","Date","getFullYear","getMonth","getDate","className","style","backgroundImage","textAlign","toLocaleDateString","width","marginTop","src","alt","marginLeft","marginRight","display","justifyContent","float","overflow","borderBottom","paddingBottom","slug","daystep","useSelector","state","database","firebase","useState","dataurl","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","getDoc","collection","doc","get","snapshot","data","array_data","map","item","index","url","class","id","href","require","type","day","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","Bday","endTime","console","log","remainingTime","daysDuration","Math","ceil","paddingTop","isMobileOnly","fontSize","CountdownCircleTimer","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","match","dispatch","useDispatch","setfbimg","settext","setname","Livelinks","setLivelinks","loading","setloading","settoday","params","payload","ref","once","then","img","val","calculateTimeLeft","difference","Bday_date","length","timeLeft","days","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","backgroundColor","color","height"],"sourceRoot":""}