{"version":3,"file":"static/js/8754.b37944f0.chunk.js","mappings":"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","sources":["LivePages/LiveMemoryGame.js","MemoryGame/MemoryGame.js","NavBars/LiveNavBar.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MemoryGame from \"../MemoryGame/MemoryGame\";\nimport Loader from \"react-loader-spinner\";\nimport firebase from \"../firebase\";\nimport LiveNavBar from \"../NavBars/LiveNavBar\";\nexport default function LiveMemoryGamePage({ match }) {\n  const [fbimg1, setfbimg1] = useState(\"\");\n  const [fbimg2, setfbimg2] = useState(\"\");\n  const [fbimg3, setfbimg3] = useState(\"\");\n  const [fbimg4, setfbimg4] = useState(\"\");\n  const [fbimg5, setfbimg5] = useState(\"\");\n  const [fbimg6, setfbimg6] = useState(\"\");\n  const [loading, setloading] = useState(false);\n\n  useEffect(async () => {\n    setloading(true);\n    const todoRef = await firebase\n      .database()\n      .ref(\"/MemoryGame/\" + match.params.slug)\n      .once(\"value\")\n      .then((snapshot) => {\n        var img1 = snapshot.val().url1;\n        setfbimg1(img1);\n        var img2 = snapshot.val().url2;\n        setfbimg2(img2);\n        var img3 = snapshot.val().url3;\n        setfbimg3(img3);\n        var img4 = snapshot.val().url4;\n        setfbimg4(img4);\n        var img5 = snapshot.val().url5;\n        setfbimg5(img5);\n        var img6 = snapshot.val().url6;\n        setfbimg6(img6);\n      });\n    setloading(false);\n  }, []);\n  return (\n    <div style={{ backgroundColor: \"#70cff3\" }}>\n      <LiveNavBar />\n      <br />\n      <br />\n      <br />\n      <br />\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div style={{ flex: \"0.1\" }}></div>\n        <div className=\"mb-3\" style={{ flex: \"0.8\" }}>\n          {loading ? (\n            <Loader\n              type=\"BallTriangle\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n            />\n          ) : (\n            <div>\n              <MemoryGame\n                fbimg1={fbimg1}\n                fbimg2={fbimg2}\n                fbimg3={fbimg3}\n                fbimg4={fbimg4}\n                fbimg5={fbimg5}\n                fbimg6={fbimg6}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport \"./memory.css\";\n\nconst useInterval = (callback, delay, duration) => {\n  const durationRef = useRef(duration);\n  const durationIntervalRef = useRef();\n\n  const handler = () => {\n    callback(durationRef);\n  };\n\n  useEffect(() => {\n    const durationInterval = setInterval(handler, delay);\n    durationIntervalRef.current = durationInterval;\n    return () => {\n      clearInterval(durationInterval);\n    };\n  }, [delay]);\n\n  return durationIntervalRef;\n};\n\nfunction MemoryGame({ fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6 }) {\n  const [newGame, setNewGame] = useState(false);\n  const [timer, settimer] = useState(0);\n  const [isstarted, setisstarted] = useState(false);\n  const [list, setList] = useState([\n    fbimg1,\n    fbimg4,\n    fbimg3,\n    fbimg4,\n    fbimg2,\n    fbimg1,\n    fbimg3,\n    fbimg6,\n    fbimg6,\n    fbimg5,\n    fbimg5,\n    fbimg2,\n  ]);\n  const [visibleItems, setVisibleItems] = useState([]);\n  const [duration, setDuration] = useState(0);\n  const [finishedItems, setFinishedItems] = useState([]);\n  const [winner, setWinner] = useState(false);\n\n  useEffect(() => {\n    setList([\n      fbimg1,\n      fbimg4,\n      fbimg3,\n      fbimg4,\n      fbimg2,\n      fbimg1,\n      fbimg3,\n      fbimg6,\n      fbimg6,\n      fbimg5,\n      fbimg5,\n      fbimg2,\n    ]);\n  }, [fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6]);\n\n  const checkItems = (firstIndex, secondIndex) => {\n    if (firstIndex !== secondIndex && list[firstIndex] === list[secondIndex]) {\n      setFinishedItems([...finishedItems, firstIndex, secondIndex]);\n    } else {\n      setTimeout(() => {\n        setVisibleItems([]);\n      }, 600);\n    }\n  };\n\n  useEffect(() => {\n    setList(\n      list.sort(() => {\n        return 0.5 - Math.random();\n      })\n    );\n  }, [newGame]);\n\n  const durationIntervalRef = useInterval(\n    (durationRef) => {\n      durationRef.current++;\n      setDuration(durationRef.current);\n    },\n    1000,\n    duration\n  );\n\n  useEffect(() => {\n    if (finishedItems.length > 0 && finishedItems.length === list.length) {\n      {\n        setWinner(true);\n      }\n\n      clearInterval(durationIntervalRef.current);\n    }\n  }, [finishedItems]);\n  useEffect(() => {\n    setTimeout(() => {\n      settimer(timer + 1);\n    }, 1000);\n  });\n  return (\n    <div>\n      {/* {timer} */}\n      {isstarted ? (\n        <div className=\"text-center p-2 d-flex flex-column\">\n          {list.length === 0 ? (\n            <div>...Loading</div>\n          ) : (\n            <div>\n              <div style={{ padding: \"0\" }} className=\"container\">\n                <div className=\"row no-gutters\">\n                  {list.map((item, index) => (\n                    <div\n                      className={`col-3 memcard ${\n                        visibleItems.includes(index) ? \"grid-memcard-show\" : \"\"\n                      } ${\n                        finishedItems.includes(index)\n                          ? \"grid-memcard-show grid-memcard-finished\"\n                          : \"\"\n                      }`}\n                      key={item.id}\n                      onClick={() => {\n                        if (!finishedItems.includes(index)) {\n                          switch (visibleItems.length) {\n                            case 0:\n                              setVisibleItems([index]);\n                              break;\n                            case 1:\n                              if (visibleItems[0] !== index) {\n                                setVisibleItems(visibleItems.concat(index));\n                                checkItems(visibleItems[0], index);\n                              }\n                              break;\n                            case 2:\n                              setVisibleItems([index]);\n                              break;\n                            default:\n                              setVisibleItems([]);\n                          }\n                        }\n                      }}\n                    >\n                      <img\n                        className={`img-thumbnail img-fluid grid-img`}\n                        src={item}\n                        alt={item.description}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {winner && (\n                <div>\n                  You Win !\n                  <br />\n                  {/* Finished in {duration} seconds */}\n                </div>\n              )}\n            </div>\n          )}\n          <br />\n          <div style={{ width: \"auto\" }}>\n            <button\n              style={{ width: \"fit-content\" }}\n              className=\"main-button\"\n              onClick={() => {\n                setNewGame(!newGame);\n                setVisibleItems([]);\n                setFinishedItems([]);\n                setWinner(false);\n              }}\n            >\n              New Game\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-2\"></div>{\" \"}\n              <div className=\"col-lg-8\">\n                <h6 style={{ color: \"#000\", textAlign: \"justify\" }}>\n                  Greetings of the day and wish you many more! Welcome to a fun\n                  game challenging your wits and hoping to put up a big wide\n                  smile on your special day.\n                </h6>{\" \"}\n                <br />\n                <h5 style={{ color: \"#000\", textAlign: \"justify\" }}>\n                  Instructions -\n                </h5>\n                <ol>\n                  <li>\n                    <p style={{ color: \"#000\", textAlign: \"justify\" }}>\n                      {\" \"}\n                      There are 6 pictures behind these 12 tiles and finish this\n                      game by matching the two tiles of the same picture\n                      together\n                    </p>\n                  </li>\n                  <li>\n                    <p style={{ color: \"#000\", textAlign: \"justify\" }}>\n                      At a given time only 2 tiles will be shown, so familiarise\n                      yourself with where each picture is and finish the game to\n                      beat your own personal best!\n                    </p>\n                  </li>\n                </ol>\n                <br />\n                <center>\n                  <button\n                    className=\"main-button\"\n                    onClick={() => {\n                      setisstarted(true);\n                      settimer(0);\n                    }}\n                  >\n                    Start game\n                  </button>\n                </center>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MemoryGame;\n","import React, { useState, useEffect } from \"react\";\nimport \"./NavBar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nexport default function LiveNavBar() {\n  const [navstate, setnavstate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeBackground);\n  }, []);\n  const changeBackground = () => {\n    if (window.scrollY >= 100) {\n      setnavstate(true);\n    } else {\n      setnavstate(false);\n    }\n  };\n  return (\n    <div>\n      <nav\n        class={\n          !navstate\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\n        }\n        id=\"mainNav\"\n      >\n        <div class=\"container\">\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\n            <img src={require(\"../Images/giftshublogo.png\")} alt=\"\" />\n          </a>\n          <button\n            class=\"navbar-toggler navbar-toggler-right\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            Menu\n            <i class=\"fas fa-bars ml-1\"></i>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link js-scroll-trigger\" href={`/aboutus`}>\n                  ABOUT\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["LiveMemoryGamePage","match","useState","fbimg1","setfbimg1","fbimg2","setfbimg2","fbimg3","setfbimg3","fbimg4","setfbimg4","fbimg5","setfbimg5","fbimg6","setfbimg6","loading","setloading","useEffect","firebase","ref","params","slug","once","then","snapshot","img1","val","url1","img2","url2","img3","url3","img4","url4","img5","url5","img6","url6","style","backgroundColor","display","alignItems","flex","className","type","color","height","width","newGame","setNewGame","timer","settimer","isstarted","setisstarted","list","setList","visibleItems","setVisibleItems","duration","setDuration","finishedItems","setFinishedItems","winner","setWinner","sort","Math","random","durationIntervalRef","callback","delay","durationRef","useRef","handler","durationInterval","setInterval","current","clearInterval","useInterval","length","setTimeout","padding","map","item","index","includes","key","id","onClick","concat","firstIndex","secondIndex","src","alt","description","textAlign","LiveNavBar","navstate","setnavstate","window","addEventListener","changeBackground","scrollY","class","href","require","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter","from","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","name","test"],"sourceRoot":""}